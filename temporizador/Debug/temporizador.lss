
temporizador.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  000016b4  00001728  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000016b4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00001368  00000000  00000000  00001740  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000083d  00000000  00000000  00002aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  000032e5  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
       c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
      64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e4 eb       	ldi	r30, 0xB4	; 180
      7c:	f6 e1       	ldi	r31, 0x16	; 22
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a6 31       	cpi	r26, 0x16	; 22
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
      8a:	0e 94 d2 05 	call	0xba4	; 0xba4 <main>
      8e:	0c 94 58 0b 	jmp	0x16b0	; 0x16b0 <_exit>

00000092 <__bad_interrupt>:
      92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <initialize>:
 *  Created on: 09/08/2013
 *      Author: vitor
 */


void initialize(){
      96:	cf 93       	push	r28
      98:	df 93       	push	r29
      9a:	cd b7       	in	r28, 0x3d	; 61
      9c:	de b7       	in	r29, 0x3e	; 62

}
      9e:	df 91       	pop	r29
      a0:	cf 91       	pop	r28
      a2:	08 95       	ret

000000a4 <lcd_reset>:
#define LCD_PIN PIND

#define LCD_RS PD4
#define LCD_EN PD6
void lcd_reset(void)
{
      a4:	0f 93       	push	r16
      a6:	1f 93       	push	r17
      a8:	cf 93       	push	r28
      aa:	df 93       	push	r29
      ac:	cd b7       	in	r28, 0x3d	; 61
      ae:	de b7       	in	r29, 0x3e	; 62
      b0:	c6 54       	subi	r28, 0x46	; 70
      b2:	d1 09       	sbc	r29, r1
      b4:	0f b6       	in	r0, 0x3f	; 63
      b6:	f8 94       	cli
      b8:	de bf       	out	0x3e, r29	; 62
      ba:	0f be       	out	0x3f, r0	; 63
      bc:	cd bf       	out	0x3d, r28	; 61
	LCD_PORT = 0xFF;
      be:	8b e2       	ldi	r24, 0x2B	; 43
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	2f ef       	ldi	r18, 0xFF	; 255
      c4:	fc 01       	movw	r30, r24
      c6:	20 83       	st	Z, r18
      c8:	80 e0       	ldi	r24, 0x00	; 0
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	a0 ea       	ldi	r26, 0xA0	; 160
      ce:	b1 e4       	ldi	r27, 0x41	; 65
      d0:	89 83       	std	Y+1, r24	; 0x01
      d2:	9a 83       	std	Y+2, r25	; 0x02
      d4:	ab 83       	std	Y+3, r26	; 0x03
      d6:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
      d8:	20 e0       	ldi	r18, 0x00	; 0
      da:	30 e0       	ldi	r19, 0x00	; 0
      dc:	4a e7       	ldi	r20, 0x7A	; 122
      de:	55 e4       	ldi	r21, 0x45	; 69
      e0:	69 81       	ldd	r22, Y+1	; 0x01
      e2:	7a 81       	ldd	r23, Y+2	; 0x02
      e4:	8b 81       	ldd	r24, Y+3	; 0x03
      e6:	9c 81       	ldd	r25, Y+4	; 0x04
      e8:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
      ec:	dc 01       	movw	r26, r24
      ee:	cb 01       	movw	r24, r22
      f0:	8d 83       	std	Y+5, r24	; 0x05
      f2:	9e 83       	std	Y+6, r25	; 0x06
      f4:	af 83       	std	Y+7, r26	; 0x07
      f6:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
      f8:	20 e0       	ldi	r18, 0x00	; 0
      fa:	30 e0       	ldi	r19, 0x00	; 0
      fc:	40 e8       	ldi	r20, 0x80	; 128
      fe:	5f e3       	ldi	r21, 0x3F	; 63
     100:	6d 81       	ldd	r22, Y+5	; 0x05
     102:	7e 81       	ldd	r23, Y+6	; 0x06
     104:	8f 81       	ldd	r24, Y+7	; 0x07
     106:	98 85       	ldd	r25, Y+8	; 0x08
     108:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     10c:	88 23       	and	r24, r24
     10e:	2c f4       	brge	.+10     	; 0x11a <lcd_reset+0x76>
		__ticks = 1;
     110:	81 e0       	ldi	r24, 0x01	; 1
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	9a 87       	std	Y+10, r25	; 0x0a
     116:	89 87       	std	Y+9, r24	; 0x09
     118:	42 c0       	rjmp	.+132    	; 0x19e <lcd_reset+0xfa>
	else if (__tmp > 65535)
     11a:	20 e0       	ldi	r18, 0x00	; 0
     11c:	3f ef       	ldi	r19, 0xFF	; 255
     11e:	4f e7       	ldi	r20, 0x7F	; 127
     120:	57 e4       	ldi	r21, 0x47	; 71
     122:	6d 81       	ldd	r22, Y+5	; 0x05
     124:	7e 81       	ldd	r23, Y+6	; 0x06
     126:	8f 81       	ldd	r24, Y+7	; 0x07
     128:	98 85       	ldd	r25, Y+8	; 0x08
     12a:	0e 94 ab 08 	call	0x1156	; 0x1156 <__gtsf2>
     12e:	18 16       	cp	r1, r24
     130:	64 f5       	brge	.+88     	; 0x18a <lcd_reset+0xe6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     132:	20 e0       	ldi	r18, 0x00	; 0
     134:	30 e0       	ldi	r19, 0x00	; 0
     136:	40 e2       	ldi	r20, 0x20	; 32
     138:	51 e4       	ldi	r21, 0x41	; 65
     13a:	69 81       	ldd	r22, Y+1	; 0x01
     13c:	7a 81       	ldd	r23, Y+2	; 0x02
     13e:	8b 81       	ldd	r24, Y+3	; 0x03
     140:	9c 81       	ldd	r25, Y+4	; 0x04
     142:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     146:	dc 01       	movw	r26, r24
     148:	cb 01       	movw	r24, r22
     14a:	bc 01       	movw	r22, r24
     14c:	cd 01       	movw	r24, r26
     14e:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     152:	dc 01       	movw	r26, r24
     154:	cb 01       	movw	r24, r22
     156:	9a 87       	std	Y+10, r25	; 0x0a
     158:	89 87       	std	Y+9, r24	; 0x09
     15a:	12 c0       	rjmp	.+36     	; 0x180 <lcd_reset+0xdc>
     15c:	80 e9       	ldi	r24, 0x90	; 144
     15e:	91 e0       	ldi	r25, 0x01	; 1
     160:	9c 87       	std	Y+12, r25	; 0x0c
     162:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     164:	8b 85       	ldd	r24, Y+11	; 0x0b
     166:	9c 85       	ldd	r25, Y+12	; 0x0c
     168:	8c 01       	movw	r16, r24
     16a:	c8 01       	movw	r24, r16
     16c:	01 97       	sbiw	r24, 0x01	; 1
     16e:	f1 f7       	brne	.-4      	; 0x16c <lcd_reset+0xc8>
     170:	8c 01       	movw	r16, r24
     172:	1c 87       	std	Y+12, r17	; 0x0c
     174:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     176:	89 85       	ldd	r24, Y+9	; 0x09
     178:	9a 85       	ldd	r25, Y+10	; 0x0a
     17a:	01 97       	sbiw	r24, 0x01	; 1
     17c:	9a 87       	std	Y+10, r25	; 0x0a
     17e:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     180:	89 85       	ldd	r24, Y+9	; 0x09
     182:	9a 85       	ldd	r25, Y+10	; 0x0a
     184:	00 97       	sbiw	r24, 0x00	; 0
     186:	51 f7       	brne	.-44     	; 0x15c <lcd_reset+0xb8>
     188:	17 c0       	rjmp	.+46     	; 0x1b8 <lcd_reset+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     18a:	6d 81       	ldd	r22, Y+5	; 0x05
     18c:	7e 81       	ldd	r23, Y+6	; 0x06
     18e:	8f 81       	ldd	r24, Y+7	; 0x07
     190:	98 85       	ldd	r25, Y+8	; 0x08
     192:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     196:	dc 01       	movw	r26, r24
     198:	cb 01       	movw	r24, r22
     19a:	9a 87       	std	Y+10, r25	; 0x0a
     19c:	89 87       	std	Y+9, r24	; 0x09
     19e:	89 85       	ldd	r24, Y+9	; 0x09
     1a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     1a2:	9e 87       	std	Y+14, r25	; 0x0e
     1a4:	8d 87       	std	Y+13, r24	; 0x0d
     1a6:	8d 85       	ldd	r24, Y+13	; 0x0d
     1a8:	9e 85       	ldd	r25, Y+14	; 0x0e
     1aa:	8c 01       	movw	r16, r24
     1ac:	f8 01       	movw	r30, r16
     1ae:	31 97       	sbiw	r30, 0x01	; 1
     1b0:	f1 f7       	brne	.-4      	; 0x1ae <lcd_reset+0x10a>
     1b2:	8f 01       	movw	r16, r30
     1b4:	1e 87       	std	Y+14, r17	; 0x0e
     1b6:	0d 87       	std	Y+13, r16	; 0x0d
	_delay_ms(20);
	LCD_PORT = 0x30 + LCD_EN;
     1b8:	8b e2       	ldi	r24, 0x2B	; 43
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	26 e3       	ldi	r18, 0x36	; 54
     1be:	fc 01       	movw	r30, r24
     1c0:	20 83       	st	Z, r18
	LCD_PORT = 0x30;
     1c2:	8b e2       	ldi	r24, 0x2B	; 43
     1c4:	90 e0       	ldi	r25, 0x00	; 0
     1c6:	20 e3       	ldi	r18, 0x30	; 48
     1c8:	fc 01       	movw	r30, r24
     1ca:	20 83       	st	Z, r18
     1cc:	80 e0       	ldi	r24, 0x00	; 0
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	a0 e2       	ldi	r26, 0x20	; 32
     1d2:	b1 e4       	ldi	r27, 0x41	; 65
     1d4:	8f 87       	std	Y+15, r24	; 0x0f
     1d6:	98 8b       	std	Y+16, r25	; 0x10
     1d8:	a9 8b       	std	Y+17, r26	; 0x11
     1da:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     1dc:	20 e0       	ldi	r18, 0x00	; 0
     1de:	30 e0       	ldi	r19, 0x00	; 0
     1e0:	4a e7       	ldi	r20, 0x7A	; 122
     1e2:	55 e4       	ldi	r21, 0x45	; 69
     1e4:	6f 85       	ldd	r22, Y+15	; 0x0f
     1e6:	78 89       	ldd	r23, Y+16	; 0x10
     1e8:	89 89       	ldd	r24, Y+17	; 0x11
     1ea:	9a 89       	ldd	r25, Y+18	; 0x12
     1ec:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     1f0:	dc 01       	movw	r26, r24
     1f2:	cb 01       	movw	r24, r22
     1f4:	8b 8b       	std	Y+19, r24	; 0x13
     1f6:	9c 8b       	std	Y+20, r25	; 0x14
     1f8:	ad 8b       	std	Y+21, r26	; 0x15
     1fa:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     1fc:	20 e0       	ldi	r18, 0x00	; 0
     1fe:	30 e0       	ldi	r19, 0x00	; 0
     200:	40 e8       	ldi	r20, 0x80	; 128
     202:	5f e3       	ldi	r21, 0x3F	; 63
     204:	6b 89       	ldd	r22, Y+19	; 0x13
     206:	7c 89       	ldd	r23, Y+20	; 0x14
     208:	8d 89       	ldd	r24, Y+21	; 0x15
     20a:	9e 89       	ldd	r25, Y+22	; 0x16
     20c:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     210:	88 23       	and	r24, r24
     212:	2c f4       	brge	.+10     	; 0x21e <lcd_reset+0x17a>
		__ticks = 1;
     214:	81 e0       	ldi	r24, 0x01	; 1
     216:	90 e0       	ldi	r25, 0x00	; 0
     218:	98 8f       	std	Y+24, r25	; 0x18
     21a:	8f 8b       	std	Y+23, r24	; 0x17
     21c:	42 c0       	rjmp	.+132    	; 0x2a2 <lcd_reset+0x1fe>
	else if (__tmp > 65535)
     21e:	20 e0       	ldi	r18, 0x00	; 0
     220:	3f ef       	ldi	r19, 0xFF	; 255
     222:	4f e7       	ldi	r20, 0x7F	; 127
     224:	57 e4       	ldi	r21, 0x47	; 71
     226:	6b 89       	ldd	r22, Y+19	; 0x13
     228:	7c 89       	ldd	r23, Y+20	; 0x14
     22a:	8d 89       	ldd	r24, Y+21	; 0x15
     22c:	9e 89       	ldd	r25, Y+22	; 0x16
     22e:	0e 94 ab 08 	call	0x1156	; 0x1156 <__gtsf2>
     232:	18 16       	cp	r1, r24
     234:	64 f5       	brge	.+88     	; 0x28e <lcd_reset+0x1ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     236:	20 e0       	ldi	r18, 0x00	; 0
     238:	30 e0       	ldi	r19, 0x00	; 0
     23a:	40 e2       	ldi	r20, 0x20	; 32
     23c:	51 e4       	ldi	r21, 0x41	; 65
     23e:	6f 85       	ldd	r22, Y+15	; 0x0f
     240:	78 89       	ldd	r23, Y+16	; 0x10
     242:	89 89       	ldd	r24, Y+17	; 0x11
     244:	9a 89       	ldd	r25, Y+18	; 0x12
     246:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     24a:	dc 01       	movw	r26, r24
     24c:	cb 01       	movw	r24, r22
     24e:	bc 01       	movw	r22, r24
     250:	cd 01       	movw	r24, r26
     252:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     256:	dc 01       	movw	r26, r24
     258:	cb 01       	movw	r24, r22
     25a:	98 8f       	std	Y+24, r25	; 0x18
     25c:	8f 8b       	std	Y+23, r24	; 0x17
     25e:	12 c0       	rjmp	.+36     	; 0x284 <lcd_reset+0x1e0>
     260:	80 e9       	ldi	r24, 0x90	; 144
     262:	91 e0       	ldi	r25, 0x01	; 1
     264:	9a 8f       	std	Y+26, r25	; 0x1a
     266:	89 8f       	std	Y+25, r24	; 0x19
     268:	89 8d       	ldd	r24, Y+25	; 0x19
     26a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     26c:	8c 01       	movw	r16, r24
     26e:	c8 01       	movw	r24, r16
     270:	01 97       	sbiw	r24, 0x01	; 1
     272:	f1 f7       	brne	.-4      	; 0x270 <lcd_reset+0x1cc>
     274:	8c 01       	movw	r16, r24
     276:	1a 8f       	std	Y+26, r17	; 0x1a
     278:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     27a:	8f 89       	ldd	r24, Y+23	; 0x17
     27c:	98 8d       	ldd	r25, Y+24	; 0x18
     27e:	01 97       	sbiw	r24, 0x01	; 1
     280:	98 8f       	std	Y+24, r25	; 0x18
     282:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     284:	8f 89       	ldd	r24, Y+23	; 0x17
     286:	98 8d       	ldd	r25, Y+24	; 0x18
     288:	00 97       	sbiw	r24, 0x00	; 0
     28a:	51 f7       	brne	.-44     	; 0x260 <lcd_reset+0x1bc>
     28c:	17 c0       	rjmp	.+46     	; 0x2bc <lcd_reset+0x218>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     28e:	6b 89       	ldd	r22, Y+19	; 0x13
     290:	7c 89       	ldd	r23, Y+20	; 0x14
     292:	8d 89       	ldd	r24, Y+21	; 0x15
     294:	9e 89       	ldd	r25, Y+22	; 0x16
     296:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     29a:	dc 01       	movw	r26, r24
     29c:	cb 01       	movw	r24, r22
     29e:	98 8f       	std	Y+24, r25	; 0x18
     2a0:	8f 8b       	std	Y+23, r24	; 0x17
     2a2:	8f 89       	ldd	r24, Y+23	; 0x17
     2a4:	98 8d       	ldd	r25, Y+24	; 0x18
     2a6:	9c 8f       	std	Y+28, r25	; 0x1c
     2a8:	8b 8f       	std	Y+27, r24	; 0x1b
     2aa:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2ac:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2ae:	8c 01       	movw	r16, r24
     2b0:	f8 01       	movw	r30, r16
     2b2:	31 97       	sbiw	r30, 0x01	; 1
     2b4:	f1 f7       	brne	.-4      	; 0x2b2 <lcd_reset+0x20e>
     2b6:	8f 01       	movw	r16, r30
     2b8:	1c 8f       	std	Y+28, r17	; 0x1c
     2ba:	0b 8f       	std	Y+27, r16	; 0x1b
	_delay_ms(10);
	LCD_PORT = 0x30+LCD_EN;
     2bc:	8b e2       	ldi	r24, 0x2B	; 43
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	26 e3       	ldi	r18, 0x36	; 54
     2c2:	fc 01       	movw	r30, r24
     2c4:	20 83       	st	Z, r18
	LCD_PORT = 0x30;
     2c6:	8b e2       	ldi	r24, 0x2B	; 43
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	20 e3       	ldi	r18, 0x30	; 48
     2cc:	fc 01       	movw	r30, r24
     2ce:	20 83       	st	Z, r18
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	90 e0       	ldi	r25, 0x00	; 0
     2d4:	a0 e8       	ldi	r26, 0x80	; 128
     2d6:	bf e3       	ldi	r27, 0x3F	; 63
     2d8:	8d 8f       	std	Y+29, r24	; 0x1d
     2da:	9e 8f       	std	Y+30, r25	; 0x1e
     2dc:	af 8f       	std	Y+31, r26	; 0x1f
     2de:	b8 a3       	std	Y+32, r27	; 0x20
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     2e0:	20 e0       	ldi	r18, 0x00	; 0
     2e2:	30 e0       	ldi	r19, 0x00	; 0
     2e4:	4a e7       	ldi	r20, 0x7A	; 122
     2e6:	55 e4       	ldi	r21, 0x45	; 69
     2e8:	6d 8d       	ldd	r22, Y+29	; 0x1d
     2ea:	7e 8d       	ldd	r23, Y+30	; 0x1e
     2ec:	8f 8d       	ldd	r24, Y+31	; 0x1f
     2ee:	98 a1       	ldd	r25, Y+32	; 0x20
     2f0:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     2f4:	dc 01       	movw	r26, r24
     2f6:	cb 01       	movw	r24, r22
     2f8:	89 a3       	std	Y+33, r24	; 0x21
     2fa:	9a a3       	std	Y+34, r25	; 0x22
     2fc:	ab a3       	std	Y+35, r26	; 0x23
     2fe:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     300:	20 e0       	ldi	r18, 0x00	; 0
     302:	30 e0       	ldi	r19, 0x00	; 0
     304:	40 e8       	ldi	r20, 0x80	; 128
     306:	5f e3       	ldi	r21, 0x3F	; 63
     308:	69 a1       	ldd	r22, Y+33	; 0x21
     30a:	7a a1       	ldd	r23, Y+34	; 0x22
     30c:	8b a1       	ldd	r24, Y+35	; 0x23
     30e:	9c a1       	ldd	r25, Y+36	; 0x24
     310:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     314:	88 23       	and	r24, r24
     316:	2c f4       	brge	.+10     	; 0x322 <lcd_reset+0x27e>
		__ticks = 1;
     318:	81 e0       	ldi	r24, 0x01	; 1
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	9e a3       	std	Y+38, r25	; 0x26
     31e:	8d a3       	std	Y+37, r24	; 0x25
     320:	42 c0       	rjmp	.+132    	; 0x3a6 <lcd_reset+0x302>
	else if (__tmp > 65535)
     322:	20 e0       	ldi	r18, 0x00	; 0
     324:	3f ef       	ldi	r19, 0xFF	; 255
     326:	4f e7       	ldi	r20, 0x7F	; 127
     328:	57 e4       	ldi	r21, 0x47	; 71
     32a:	69 a1       	ldd	r22, Y+33	; 0x21
     32c:	7a a1       	ldd	r23, Y+34	; 0x22
     32e:	8b a1       	ldd	r24, Y+35	; 0x23
     330:	9c a1       	ldd	r25, Y+36	; 0x24
     332:	0e 94 ab 08 	call	0x1156	; 0x1156 <__gtsf2>
     336:	18 16       	cp	r1, r24
     338:	64 f5       	brge	.+88     	; 0x392 <lcd_reset+0x2ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     33a:	20 e0       	ldi	r18, 0x00	; 0
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	40 e2       	ldi	r20, 0x20	; 32
     340:	51 e4       	ldi	r21, 0x41	; 65
     342:	6d 8d       	ldd	r22, Y+29	; 0x1d
     344:	7e 8d       	ldd	r23, Y+30	; 0x1e
     346:	8f 8d       	ldd	r24, Y+31	; 0x1f
     348:	98 a1       	ldd	r25, Y+32	; 0x20
     34a:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     34e:	dc 01       	movw	r26, r24
     350:	cb 01       	movw	r24, r22
     352:	bc 01       	movw	r22, r24
     354:	cd 01       	movw	r24, r26
     356:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     35a:	dc 01       	movw	r26, r24
     35c:	cb 01       	movw	r24, r22
     35e:	9e a3       	std	Y+38, r25	; 0x26
     360:	8d a3       	std	Y+37, r24	; 0x25
     362:	12 c0       	rjmp	.+36     	; 0x388 <lcd_reset+0x2e4>
     364:	80 e9       	ldi	r24, 0x90	; 144
     366:	91 e0       	ldi	r25, 0x01	; 1
     368:	98 a7       	std	Y+40, r25	; 0x28
     36a:	8f a3       	std	Y+39, r24	; 0x27
     36c:	8f a1       	ldd	r24, Y+39	; 0x27
     36e:	98 a5       	ldd	r25, Y+40	; 0x28
     370:	8c 01       	movw	r16, r24
     372:	c8 01       	movw	r24, r16
     374:	01 97       	sbiw	r24, 0x01	; 1
     376:	f1 f7       	brne	.-4      	; 0x374 <lcd_reset+0x2d0>
     378:	8c 01       	movw	r16, r24
     37a:	18 a7       	std	Y+40, r17	; 0x28
     37c:	0f a3       	std	Y+39, r16	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     37e:	8d a1       	ldd	r24, Y+37	; 0x25
     380:	9e a1       	ldd	r25, Y+38	; 0x26
     382:	01 97       	sbiw	r24, 0x01	; 1
     384:	9e a3       	std	Y+38, r25	; 0x26
     386:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     388:	8d a1       	ldd	r24, Y+37	; 0x25
     38a:	9e a1       	ldd	r25, Y+38	; 0x26
     38c:	00 97       	sbiw	r24, 0x00	; 0
     38e:	51 f7       	brne	.-44     	; 0x364 <lcd_reset+0x2c0>
     390:	17 c0       	rjmp	.+46     	; 0x3c0 <lcd_reset+0x31c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     392:	69 a1       	ldd	r22, Y+33	; 0x21
     394:	7a a1       	ldd	r23, Y+34	; 0x22
     396:	8b a1       	ldd	r24, Y+35	; 0x23
     398:	9c a1       	ldd	r25, Y+36	; 0x24
     39a:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     39e:	dc 01       	movw	r26, r24
     3a0:	cb 01       	movw	r24, r22
     3a2:	9e a3       	std	Y+38, r25	; 0x26
     3a4:	8d a3       	std	Y+37, r24	; 0x25
     3a6:	8d a1       	ldd	r24, Y+37	; 0x25
     3a8:	9e a1       	ldd	r25, Y+38	; 0x26
     3aa:	9a a7       	std	Y+42, r25	; 0x2a
     3ac:	89 a7       	std	Y+41, r24	; 0x29
     3ae:	89 a5       	ldd	r24, Y+41	; 0x29
     3b0:	9a a5       	ldd	r25, Y+42	; 0x2a
     3b2:	8c 01       	movw	r16, r24
     3b4:	f8 01       	movw	r30, r16
     3b6:	31 97       	sbiw	r30, 0x01	; 1
     3b8:	f1 f7       	brne	.-4      	; 0x3b6 <lcd_reset+0x312>
     3ba:	8f 01       	movw	r16, r30
     3bc:	1a a7       	std	Y+42, r17	; 0x2a
     3be:	09 a7       	std	Y+41, r16	; 0x29
	_delay_ms(1);
	LCD_PORT = 0x30+LCD_EN;
     3c0:	8b e2       	ldi	r24, 0x2B	; 43
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	26 e3       	ldi	r18, 0x36	; 54
     3c6:	fc 01       	movw	r30, r24
     3c8:	20 83       	st	Z, r18
	LCD_PORT = 0x30;
     3ca:	8b e2       	ldi	r24, 0x2B	; 43
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	20 e3       	ldi	r18, 0x30	; 48
     3d0:	fc 01       	movw	r30, r24
     3d2:	20 83       	st	Z, r18
     3d4:	80 e0       	ldi	r24, 0x00	; 0
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	a0 e8       	ldi	r26, 0x80	; 128
     3da:	bf e3       	ldi	r27, 0x3F	; 63
     3dc:	8b a7       	std	Y+43, r24	; 0x2b
     3de:	9c a7       	std	Y+44, r25	; 0x2c
     3e0:	ad a7       	std	Y+45, r26	; 0x2d
     3e2:	be a7       	std	Y+46, r27	; 0x2e
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     3e4:	20 e0       	ldi	r18, 0x00	; 0
     3e6:	30 e0       	ldi	r19, 0x00	; 0
     3e8:	4a e7       	ldi	r20, 0x7A	; 122
     3ea:	55 e4       	ldi	r21, 0x45	; 69
     3ec:	6b a5       	ldd	r22, Y+43	; 0x2b
     3ee:	7c a5       	ldd	r23, Y+44	; 0x2c
     3f0:	8d a5       	ldd	r24, Y+45	; 0x2d
     3f2:	9e a5       	ldd	r25, Y+46	; 0x2e
     3f4:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     3f8:	dc 01       	movw	r26, r24
     3fa:	cb 01       	movw	r24, r22
     3fc:	8f a7       	std	Y+47, r24	; 0x2f
     3fe:	98 ab       	std	Y+48, r25	; 0x30
     400:	a9 ab       	std	Y+49, r26	; 0x31
     402:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
     404:	20 e0       	ldi	r18, 0x00	; 0
     406:	30 e0       	ldi	r19, 0x00	; 0
     408:	40 e8       	ldi	r20, 0x80	; 128
     40a:	5f e3       	ldi	r21, 0x3F	; 63
     40c:	6f a5       	ldd	r22, Y+47	; 0x2f
     40e:	78 a9       	ldd	r23, Y+48	; 0x30
     410:	89 a9       	ldd	r24, Y+49	; 0x31
     412:	9a a9       	ldd	r25, Y+50	; 0x32
     414:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     418:	88 23       	and	r24, r24
     41a:	2c f4       	brge	.+10     	; 0x426 <lcd_reset+0x382>
		__ticks = 1;
     41c:	81 e0       	ldi	r24, 0x01	; 1
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	9c ab       	std	Y+52, r25	; 0x34
     422:	8b ab       	std	Y+51, r24	; 0x33
     424:	42 c0       	rjmp	.+132    	; 0x4aa <lcd_reset+0x406>
	else if (__tmp > 65535)
     426:	20 e0       	ldi	r18, 0x00	; 0
     428:	3f ef       	ldi	r19, 0xFF	; 255
     42a:	4f e7       	ldi	r20, 0x7F	; 127
     42c:	57 e4       	ldi	r21, 0x47	; 71
     42e:	6f a5       	ldd	r22, Y+47	; 0x2f
     430:	78 a9       	ldd	r23, Y+48	; 0x30
     432:	89 a9       	ldd	r24, Y+49	; 0x31
     434:	9a a9       	ldd	r25, Y+50	; 0x32
     436:	0e 94 ab 08 	call	0x1156	; 0x1156 <__gtsf2>
     43a:	18 16       	cp	r1, r24
     43c:	64 f5       	brge	.+88     	; 0x496 <lcd_reset+0x3f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	40 e2       	ldi	r20, 0x20	; 32
     444:	51 e4       	ldi	r21, 0x41	; 65
     446:	6b a5       	ldd	r22, Y+43	; 0x2b
     448:	7c a5       	ldd	r23, Y+44	; 0x2c
     44a:	8d a5       	ldd	r24, Y+45	; 0x2d
     44c:	9e a5       	ldd	r25, Y+46	; 0x2e
     44e:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     452:	dc 01       	movw	r26, r24
     454:	cb 01       	movw	r24, r22
     456:	bc 01       	movw	r22, r24
     458:	cd 01       	movw	r24, r26
     45a:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     45e:	dc 01       	movw	r26, r24
     460:	cb 01       	movw	r24, r22
     462:	9c ab       	std	Y+52, r25	; 0x34
     464:	8b ab       	std	Y+51, r24	; 0x33
     466:	12 c0       	rjmp	.+36     	; 0x48c <lcd_reset+0x3e8>
     468:	80 e9       	ldi	r24, 0x90	; 144
     46a:	91 e0       	ldi	r25, 0x01	; 1
     46c:	9e ab       	std	Y+54, r25	; 0x36
     46e:	8d ab       	std	Y+53, r24	; 0x35
     470:	8d a9       	ldd	r24, Y+53	; 0x35
     472:	9e a9       	ldd	r25, Y+54	; 0x36
     474:	8c 01       	movw	r16, r24
     476:	c8 01       	movw	r24, r16
     478:	01 97       	sbiw	r24, 0x01	; 1
     47a:	f1 f7       	brne	.-4      	; 0x478 <lcd_reset+0x3d4>
     47c:	8c 01       	movw	r16, r24
     47e:	1e ab       	std	Y+54, r17	; 0x36
     480:	0d ab       	std	Y+53, r16	; 0x35
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     482:	8b a9       	ldd	r24, Y+51	; 0x33
     484:	9c a9       	ldd	r25, Y+52	; 0x34
     486:	01 97       	sbiw	r24, 0x01	; 1
     488:	9c ab       	std	Y+52, r25	; 0x34
     48a:	8b ab       	std	Y+51, r24	; 0x33
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     48c:	8b a9       	ldd	r24, Y+51	; 0x33
     48e:	9c a9       	ldd	r25, Y+52	; 0x34
     490:	00 97       	sbiw	r24, 0x00	; 0
     492:	51 f7       	brne	.-44     	; 0x468 <lcd_reset+0x3c4>
     494:	17 c0       	rjmp	.+46     	; 0x4c4 <lcd_reset+0x420>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     496:	6f a5       	ldd	r22, Y+47	; 0x2f
     498:	78 a9       	ldd	r23, Y+48	; 0x30
     49a:	89 a9       	ldd	r24, Y+49	; 0x31
     49c:	9a a9       	ldd	r25, Y+50	; 0x32
     49e:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     4a2:	dc 01       	movw	r26, r24
     4a4:	cb 01       	movw	r24, r22
     4a6:	9c ab       	std	Y+52, r25	; 0x34
     4a8:	8b ab       	std	Y+51, r24	; 0x33
     4aa:	8b a9       	ldd	r24, Y+51	; 0x33
     4ac:	9c a9       	ldd	r25, Y+52	; 0x34
     4ae:	98 af       	std	Y+56, r25	; 0x38
     4b0:	8f ab       	std	Y+55, r24	; 0x37
     4b2:	8f a9       	ldd	r24, Y+55	; 0x37
     4b4:	98 ad       	ldd	r25, Y+56	; 0x38
     4b6:	8c 01       	movw	r16, r24
     4b8:	f8 01       	movw	r30, r16
     4ba:	31 97       	sbiw	r30, 0x01	; 1
     4bc:	f1 f7       	brne	.-4      	; 0x4ba <lcd_reset+0x416>
     4be:	8f 01       	movw	r16, r30
     4c0:	18 af       	std	Y+56, r17	; 0x38
     4c2:	0f ab       	std	Y+55, r16	; 0x37
	_delay_ms(1);
	LCD_PORT = 0x20+LCD_EN;
     4c4:	8b e2       	ldi	r24, 0x2B	; 43
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	26 e2       	ldi	r18, 0x26	; 38
     4ca:	fc 01       	movw	r30, r24
     4cc:	20 83       	st	Z, r18
	LCD_PORT = 0x20;
     4ce:	8b e2       	ldi	r24, 0x2B	; 43
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	20 e2       	ldi	r18, 0x20	; 32
     4d4:	fc 01       	movw	r30, r24
     4d6:	20 83       	st	Z, r18
     4d8:	80 e0       	ldi	r24, 0x00	; 0
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	a0 e8       	ldi	r26, 0x80	; 128
     4de:	bf e3       	ldi	r27, 0x3F	; 63
     4e0:	89 af       	std	Y+57, r24	; 0x39
     4e2:	9a af       	std	Y+58, r25	; 0x3a
     4e4:	ab af       	std	Y+59, r26	; 0x3b
     4e6:	bc af       	std	Y+60, r27	; 0x3c
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     4e8:	20 e0       	ldi	r18, 0x00	; 0
     4ea:	30 e0       	ldi	r19, 0x00	; 0
     4ec:	4a e7       	ldi	r20, 0x7A	; 122
     4ee:	55 e4       	ldi	r21, 0x45	; 69
     4f0:	69 ad       	ldd	r22, Y+57	; 0x39
     4f2:	7a ad       	ldd	r23, Y+58	; 0x3a
     4f4:	8b ad       	ldd	r24, Y+59	; 0x3b
     4f6:	9c ad       	ldd	r25, Y+60	; 0x3c
     4f8:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     4fc:	dc 01       	movw	r26, r24
     4fe:	cb 01       	movw	r24, r22
     500:	9e 01       	movw	r18, r28
     502:	23 5c       	subi	r18, 0xC3	; 195
     504:	3f 4f       	sbci	r19, 0xFF	; 255
     506:	f9 01       	movw	r30, r18
     508:	80 83       	st	Z, r24
     50a:	91 83       	std	Z+1, r25	; 0x01
     50c:	a2 83       	std	Z+2, r26	; 0x02
     50e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     510:	20 e0       	ldi	r18, 0x00	; 0
     512:	30 e0       	ldi	r19, 0x00	; 0
     514:	40 e8       	ldi	r20, 0x80	; 128
     516:	5f e3       	ldi	r21, 0x3F	; 63
     518:	ce 01       	movw	r24, r28
     51a:	cd 96       	adiw	r24, 0x3d	; 61
     51c:	fc 01       	movw	r30, r24
     51e:	60 81       	ld	r22, Z
     520:	71 81       	ldd	r23, Z+1	; 0x01
     522:	82 81       	ldd	r24, Z+2	; 0x02
     524:	93 81       	ldd	r25, Z+3	; 0x03
     526:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     52a:	88 23       	and	r24, r24
     52c:	4c f4       	brge	.+18     	; 0x540 <lcd_reset+0x49c>
		__ticks = 1;
     52e:	ce 01       	movw	r24, r28
     530:	8f 5b       	subi	r24, 0xBF	; 191
     532:	9f 4f       	sbci	r25, 0xFF	; 255
     534:	21 e0       	ldi	r18, 0x01	; 1
     536:	30 e0       	ldi	r19, 0x00	; 0
     538:	fc 01       	movw	r30, r24
     53a:	31 83       	std	Z+1, r19	; 0x01
     53c:	20 83       	st	Z, r18
     53e:	6a c0       	rjmp	.+212    	; 0x614 <lcd_reset+0x570>
	else if (__tmp > 65535)
     540:	20 e0       	ldi	r18, 0x00	; 0
     542:	3f ef       	ldi	r19, 0xFF	; 255
     544:	4f e7       	ldi	r20, 0x7F	; 127
     546:	57 e4       	ldi	r21, 0x47	; 71
     548:	ce 01       	movw	r24, r28
     54a:	cd 96       	adiw	r24, 0x3d	; 61
     54c:	fc 01       	movw	r30, r24
     54e:	60 81       	ld	r22, Z
     550:	71 81       	ldd	r23, Z+1	; 0x01
     552:	82 81       	ldd	r24, Z+2	; 0x02
     554:	93 81       	ldd	r25, Z+3	; 0x03
     556:	0e 94 ab 08 	call	0x1156	; 0x1156 <__gtsf2>
     55a:	18 16       	cp	r1, r24
     55c:	0c f0       	brlt	.+2      	; 0x560 <lcd_reset+0x4bc>
     55e:	49 c0       	rjmp	.+146    	; 0x5f2 <lcd_reset+0x54e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     560:	20 e0       	ldi	r18, 0x00	; 0
     562:	30 e0       	ldi	r19, 0x00	; 0
     564:	40 e2       	ldi	r20, 0x20	; 32
     566:	51 e4       	ldi	r21, 0x41	; 65
     568:	69 ad       	ldd	r22, Y+57	; 0x39
     56a:	7a ad       	ldd	r23, Y+58	; 0x3a
     56c:	8b ad       	ldd	r24, Y+59	; 0x3b
     56e:	9c ad       	ldd	r25, Y+60	; 0x3c
     570:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     574:	dc 01       	movw	r26, r24
     576:	cb 01       	movw	r24, r22
     578:	8e 01       	movw	r16, r28
     57a:	0f 5b       	subi	r16, 0xBF	; 191
     57c:	1f 4f       	sbci	r17, 0xFF	; 255
     57e:	bc 01       	movw	r22, r24
     580:	cd 01       	movw	r24, r26
     582:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     586:	dc 01       	movw	r26, r24
     588:	cb 01       	movw	r24, r22
     58a:	f8 01       	movw	r30, r16
     58c:	91 83       	std	Z+1, r25	; 0x01
     58e:	80 83       	st	Z, r24
     590:	27 c0       	rjmp	.+78     	; 0x5e0 <lcd_reset+0x53c>
     592:	ce 01       	movw	r24, r28
     594:	8d 5b       	subi	r24, 0xBD	; 189
     596:	9f 4f       	sbci	r25, 0xFF	; 255
     598:	20 e9       	ldi	r18, 0x90	; 144
     59a:	31 e0       	ldi	r19, 0x01	; 1
     59c:	fc 01       	movw	r30, r24
     59e:	31 83       	std	Z+1, r19	; 0x01
     5a0:	20 83       	st	Z, r18
     5a2:	ce 01       	movw	r24, r28
     5a4:	8d 5b       	subi	r24, 0xBD	; 189
     5a6:	9f 4f       	sbci	r25, 0xFF	; 255
     5a8:	fc 01       	movw	r30, r24
     5aa:	80 81       	ld	r24, Z
     5ac:	91 81       	ldd	r25, Z+1	; 0x01
     5ae:	8c 01       	movw	r16, r24
     5b0:	c8 01       	movw	r24, r16
     5b2:	01 97       	sbiw	r24, 0x01	; 1
     5b4:	f1 f7       	brne	.-4      	; 0x5b2 <lcd_reset+0x50e>
     5b6:	8c 01       	movw	r16, r24
     5b8:	ce 01       	movw	r24, r28
     5ba:	8d 5b       	subi	r24, 0xBD	; 189
     5bc:	9f 4f       	sbci	r25, 0xFF	; 255
     5be:	fc 01       	movw	r30, r24
     5c0:	11 83       	std	Z+1, r17	; 0x01
     5c2:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5c4:	ce 01       	movw	r24, r28
     5c6:	8f 5b       	subi	r24, 0xBF	; 191
     5c8:	9f 4f       	sbci	r25, 0xFF	; 255
     5ca:	9e 01       	movw	r18, r28
     5cc:	2f 5b       	subi	r18, 0xBF	; 191
     5ce:	3f 4f       	sbci	r19, 0xFF	; 255
     5d0:	f9 01       	movw	r30, r18
     5d2:	20 81       	ld	r18, Z
     5d4:	31 81       	ldd	r19, Z+1	; 0x01
     5d6:	21 50       	subi	r18, 0x01	; 1
     5d8:	31 09       	sbc	r19, r1
     5da:	fc 01       	movw	r30, r24
     5dc:	31 83       	std	Z+1, r19	; 0x01
     5de:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5e0:	ce 01       	movw	r24, r28
     5e2:	8f 5b       	subi	r24, 0xBF	; 191
     5e4:	9f 4f       	sbci	r25, 0xFF	; 255
     5e6:	fc 01       	movw	r30, r24
     5e8:	80 81       	ld	r24, Z
     5ea:	91 81       	ldd	r25, Z+1	; 0x01
     5ec:	00 97       	sbiw	r24, 0x00	; 0
     5ee:	89 f6       	brne	.-94     	; 0x592 <lcd_reset+0x4ee>
     5f0:	2e c0       	rjmp	.+92     	; 0x64e <lcd_reset+0x5aa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     5f2:	8e 01       	movw	r16, r28
     5f4:	0f 5b       	subi	r16, 0xBF	; 191
     5f6:	1f 4f       	sbci	r17, 0xFF	; 255
     5f8:	ce 01       	movw	r24, r28
     5fa:	cd 96       	adiw	r24, 0x3d	; 61
     5fc:	fc 01       	movw	r30, r24
     5fe:	60 81       	ld	r22, Z
     600:	71 81       	ldd	r23, Z+1	; 0x01
     602:	82 81       	ldd	r24, Z+2	; 0x02
     604:	93 81       	ldd	r25, Z+3	; 0x03
     606:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     60a:	dc 01       	movw	r26, r24
     60c:	cb 01       	movw	r24, r22
     60e:	f8 01       	movw	r30, r16
     610:	91 83       	std	Z+1, r25	; 0x01
     612:	80 83       	st	Z, r24
     614:	ce 01       	movw	r24, r28
     616:	8b 5b       	subi	r24, 0xBB	; 187
     618:	9f 4f       	sbci	r25, 0xFF	; 255
     61a:	9e 01       	movw	r18, r28
     61c:	2f 5b       	subi	r18, 0xBF	; 191
     61e:	3f 4f       	sbci	r19, 0xFF	; 255
     620:	f9 01       	movw	r30, r18
     622:	20 81       	ld	r18, Z
     624:	31 81       	ldd	r19, Z+1	; 0x01
     626:	fc 01       	movw	r30, r24
     628:	31 83       	std	Z+1, r19	; 0x01
     62a:	20 83       	st	Z, r18
     62c:	ce 01       	movw	r24, r28
     62e:	8b 5b       	subi	r24, 0xBB	; 187
     630:	9f 4f       	sbci	r25, 0xFF	; 255
     632:	fc 01       	movw	r30, r24
     634:	80 81       	ld	r24, Z
     636:	91 81       	ldd	r25, Z+1	; 0x01
     638:	8c 01       	movw	r16, r24
     63a:	c8 01       	movw	r24, r16
     63c:	01 97       	sbiw	r24, 0x01	; 1
     63e:	f1 f7       	brne	.-4      	; 0x63c <lcd_reset+0x598>
     640:	8c 01       	movw	r16, r24
     642:	ce 01       	movw	r24, r28
     644:	8b 5b       	subi	r24, 0xBB	; 187
     646:	9f 4f       	sbci	r25, 0xFF	; 255
     648:	fc 01       	movw	r30, r24
     64a:	11 83       	std	Z+1, r17	; 0x01
     64c:	00 83       	st	Z, r16
	_delay_ms(1);
}
     64e:	ca 5b       	subi	r28, 0xBA	; 186
     650:	df 4f       	sbci	r29, 0xFF	; 255
     652:	0f b6       	in	r0, 0x3f	; 63
     654:	f8 94       	cli
     656:	de bf       	out	0x3e, r29	; 62
     658:	0f be       	out	0x3f, r0	; 63
     65a:	cd bf       	out	0x3d, r28	; 61
     65c:	df 91       	pop	r29
     65e:	cf 91       	pop	r28
     660:	1f 91       	pop	r17
     662:	0f 91       	pop	r16
     664:	08 95       	ret

00000666 <lcd_cmd>:


void lcd_cmd (char cmd)
{
     666:	0f 93       	push	r16
     668:	1f 93       	push	r17
     66a:	cf 93       	push	r28
     66c:	df 93       	push	r29
     66e:	cd b7       	in	r28, 0x3d	; 61
     670:	de b7       	in	r29, 0x3e	; 62
     672:	6d 97       	sbiw	r28, 0x1d	; 29
     674:	0f b6       	in	r0, 0x3f	; 63
     676:	f8 94       	cli
     678:	de bf       	out	0x3e, r29	; 62
     67a:	0f be       	out	0x3f, r0	; 63
     67c:	cd bf       	out	0x3d, r28	; 61
     67e:	8d 8f       	std	Y+29, r24	; 0x1d
	LCD_PORT = (cmd & 0xF0)|LCD_EN;
     680:	8b e2       	ldi	r24, 0x2B	; 43
     682:	90 e0       	ldi	r25, 0x00	; 0
     684:	2d 8d       	ldd	r18, Y+29	; 0x1d
     686:	20 7f       	andi	r18, 0xF0	; 240
     688:	26 60       	ori	r18, 0x06	; 6
     68a:	fc 01       	movw	r30, r24
     68c:	20 83       	st	Z, r18
	LCD_PORT = (cmd & 0xF0);
     68e:	8b e2       	ldi	r24, 0x2B	; 43
     690:	90 e0       	ldi	r25, 0x00	; 0
     692:	2d 8d       	ldd	r18, Y+29	; 0x1d
     694:	20 7f       	andi	r18, 0xF0	; 240
     696:	fc 01       	movw	r30, r24
     698:	20 83       	st	Z, r18
	LCD_PORT = ((cmd << 4) & 0xF0)|LCD_EN;
     69a:	8b e2       	ldi	r24, 0x2B	; 43
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	2d 8d       	ldd	r18, Y+29	; 0x1d
     6a0:	22 2f       	mov	r18, r18
     6a2:	30 e0       	ldi	r19, 0x00	; 0
     6a4:	22 95       	swap	r18
     6a6:	32 95       	swap	r19
     6a8:	30 7f       	andi	r19, 0xF0	; 240
     6aa:	32 27       	eor	r19, r18
     6ac:	20 7f       	andi	r18, 0xF0	; 240
     6ae:	32 27       	eor	r19, r18
     6b0:	26 60       	ori	r18, 0x06	; 6
     6b2:	fc 01       	movw	r30, r24
     6b4:	20 83       	st	Z, r18
	LCD_PORT = ((cmd << 4) & 0xF0);
     6b6:	8b e2       	ldi	r24, 0x2B	; 43
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	2d 8d       	ldd	r18, Y+29	; 0x1d
     6bc:	22 2f       	mov	r18, r18
     6be:	30 e0       	ldi	r19, 0x00	; 0
     6c0:	22 95       	swap	r18
     6c2:	32 95       	swap	r19
     6c4:	30 7f       	andi	r19, 0xF0	; 240
     6c6:	32 27       	eor	r19, r18
     6c8:	20 7f       	andi	r18, 0xF0	; 240
     6ca:	32 27       	eor	r19, r18
     6cc:	fc 01       	movw	r30, r24
     6ce:	20 83       	st	Z, r18
     6d0:	80 e0       	ldi	r24, 0x00	; 0
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	a0 e0       	ldi	r26, 0x00	; 0
     6d6:	b0 e4       	ldi	r27, 0x40	; 64
     6d8:	89 83       	std	Y+1, r24	; 0x01
     6da:	9a 83       	std	Y+2, r25	; 0x02
     6dc:	ab 83       	std	Y+3, r26	; 0x03
     6de:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     6e0:	20 e0       	ldi	r18, 0x00	; 0
     6e2:	30 e0       	ldi	r19, 0x00	; 0
     6e4:	4a e7       	ldi	r20, 0x7A	; 122
     6e6:	55 e4       	ldi	r21, 0x45	; 69
     6e8:	69 81       	ldd	r22, Y+1	; 0x01
     6ea:	7a 81       	ldd	r23, Y+2	; 0x02
     6ec:	8b 81       	ldd	r24, Y+3	; 0x03
     6ee:	9c 81       	ldd	r25, Y+4	; 0x04
     6f0:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     6f4:	dc 01       	movw	r26, r24
     6f6:	cb 01       	movw	r24, r22
     6f8:	8d 83       	std	Y+5, r24	; 0x05
     6fa:	9e 83       	std	Y+6, r25	; 0x06
     6fc:	af 83       	std	Y+7, r26	; 0x07
     6fe:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     700:	20 e0       	ldi	r18, 0x00	; 0
     702:	30 e0       	ldi	r19, 0x00	; 0
     704:	40 e8       	ldi	r20, 0x80	; 128
     706:	5f e3       	ldi	r21, 0x3F	; 63
     708:	6d 81       	ldd	r22, Y+5	; 0x05
     70a:	7e 81       	ldd	r23, Y+6	; 0x06
     70c:	8f 81       	ldd	r24, Y+7	; 0x07
     70e:	98 85       	ldd	r25, Y+8	; 0x08
     710:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     714:	88 23       	and	r24, r24
     716:	2c f4       	brge	.+10     	; 0x722 <lcd_cmd+0xbc>
		__ticks = 1;
     718:	81 e0       	ldi	r24, 0x01	; 1
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	9a 87       	std	Y+10, r25	; 0x0a
     71e:	89 87       	std	Y+9, r24	; 0x09
     720:	42 c0       	rjmp	.+132    	; 0x7a6 <lcd_cmd+0x140>
	else if (__tmp > 65535)
     722:	20 e0       	ldi	r18, 0x00	; 0
     724:	3f ef       	ldi	r19, 0xFF	; 255
     726:	4f e7       	ldi	r20, 0x7F	; 127
     728:	57 e4       	ldi	r21, 0x47	; 71
     72a:	6d 81       	ldd	r22, Y+5	; 0x05
     72c:	7e 81       	ldd	r23, Y+6	; 0x06
     72e:	8f 81       	ldd	r24, Y+7	; 0x07
     730:	98 85       	ldd	r25, Y+8	; 0x08
     732:	0e 94 ab 08 	call	0x1156	; 0x1156 <__gtsf2>
     736:	18 16       	cp	r1, r24
     738:	64 f5       	brge	.+88     	; 0x792 <lcd_cmd+0x12c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     73a:	20 e0       	ldi	r18, 0x00	; 0
     73c:	30 e0       	ldi	r19, 0x00	; 0
     73e:	40 e2       	ldi	r20, 0x20	; 32
     740:	51 e4       	ldi	r21, 0x41	; 65
     742:	69 81       	ldd	r22, Y+1	; 0x01
     744:	7a 81       	ldd	r23, Y+2	; 0x02
     746:	8b 81       	ldd	r24, Y+3	; 0x03
     748:	9c 81       	ldd	r25, Y+4	; 0x04
     74a:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     74e:	dc 01       	movw	r26, r24
     750:	cb 01       	movw	r24, r22
     752:	bc 01       	movw	r22, r24
     754:	cd 01       	movw	r24, r26
     756:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     75a:	dc 01       	movw	r26, r24
     75c:	cb 01       	movw	r24, r22
     75e:	9a 87       	std	Y+10, r25	; 0x0a
     760:	89 87       	std	Y+9, r24	; 0x09
     762:	12 c0       	rjmp	.+36     	; 0x788 <lcd_cmd+0x122>
     764:	80 e9       	ldi	r24, 0x90	; 144
     766:	91 e0       	ldi	r25, 0x01	; 1
     768:	9c 87       	std	Y+12, r25	; 0x0c
     76a:	8b 87       	std	Y+11, r24	; 0x0b
     76c:	8b 85       	ldd	r24, Y+11	; 0x0b
     76e:	9c 85       	ldd	r25, Y+12	; 0x0c
     770:	8c 01       	movw	r16, r24
     772:	c8 01       	movw	r24, r16
     774:	01 97       	sbiw	r24, 0x01	; 1
     776:	f1 f7       	brne	.-4      	; 0x774 <lcd_cmd+0x10e>
     778:	8c 01       	movw	r16, r24
     77a:	1c 87       	std	Y+12, r17	; 0x0c
     77c:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     77e:	89 85       	ldd	r24, Y+9	; 0x09
     780:	9a 85       	ldd	r25, Y+10	; 0x0a
     782:	01 97       	sbiw	r24, 0x01	; 1
     784:	9a 87       	std	Y+10, r25	; 0x0a
     786:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     788:	89 85       	ldd	r24, Y+9	; 0x09
     78a:	9a 85       	ldd	r25, Y+10	; 0x0a
     78c:	00 97       	sbiw	r24, 0x00	; 0
     78e:	51 f7       	brne	.-44     	; 0x764 <lcd_cmd+0xfe>
     790:	17 c0       	rjmp	.+46     	; 0x7c0 <lcd_cmd+0x15a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     792:	6d 81       	ldd	r22, Y+5	; 0x05
     794:	7e 81       	ldd	r23, Y+6	; 0x06
     796:	8f 81       	ldd	r24, Y+7	; 0x07
     798:	98 85       	ldd	r25, Y+8	; 0x08
     79a:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     79e:	dc 01       	movw	r26, r24
     7a0:	cb 01       	movw	r24, r22
     7a2:	9a 87       	std	Y+10, r25	; 0x0a
     7a4:	89 87       	std	Y+9, r24	; 0x09
     7a6:	89 85       	ldd	r24, Y+9	; 0x09
     7a8:	9a 85       	ldd	r25, Y+10	; 0x0a
     7aa:	9e 87       	std	Y+14, r25	; 0x0e
     7ac:	8d 87       	std	Y+13, r24	; 0x0d
     7ae:	8d 85       	ldd	r24, Y+13	; 0x0d
     7b0:	9e 85       	ldd	r25, Y+14	; 0x0e
     7b2:	8c 01       	movw	r16, r24
     7b4:	f8 01       	movw	r30, r16
     7b6:	31 97       	sbiw	r30, 0x01	; 1
     7b8:	f1 f7       	brne	.-4      	; 0x7b6 <lcd_cmd+0x150>
     7ba:	8f 01       	movw	r16, r30
     7bc:	1e 87       	std	Y+14, r17	; 0x0e
     7be:	0d 87       	std	Y+13, r16	; 0x0d
     7c0:	80 e0       	ldi	r24, 0x00	; 0
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	a0 e0       	ldi	r26, 0x00	; 0
     7c6:	b0 e4       	ldi	r27, 0x40	; 64
     7c8:	8f 87       	std	Y+15, r24	; 0x0f
     7ca:	98 8b       	std	Y+16, r25	; 0x10
     7cc:	a9 8b       	std	Y+17, r26	; 0x11
     7ce:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     7d0:	20 e0       	ldi	r18, 0x00	; 0
     7d2:	30 e0       	ldi	r19, 0x00	; 0
     7d4:	4a e7       	ldi	r20, 0x7A	; 122
     7d6:	55 e4       	ldi	r21, 0x45	; 69
     7d8:	6f 85       	ldd	r22, Y+15	; 0x0f
     7da:	78 89       	ldd	r23, Y+16	; 0x10
     7dc:	89 89       	ldd	r24, Y+17	; 0x11
     7de:	9a 89       	ldd	r25, Y+18	; 0x12
     7e0:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     7e4:	dc 01       	movw	r26, r24
     7e6:	cb 01       	movw	r24, r22
     7e8:	8b 8b       	std	Y+19, r24	; 0x13
     7ea:	9c 8b       	std	Y+20, r25	; 0x14
     7ec:	ad 8b       	std	Y+21, r26	; 0x15
     7ee:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     7f0:	20 e0       	ldi	r18, 0x00	; 0
     7f2:	30 e0       	ldi	r19, 0x00	; 0
     7f4:	40 e8       	ldi	r20, 0x80	; 128
     7f6:	5f e3       	ldi	r21, 0x3F	; 63
     7f8:	6b 89       	ldd	r22, Y+19	; 0x13
     7fa:	7c 89       	ldd	r23, Y+20	; 0x14
     7fc:	8d 89       	ldd	r24, Y+21	; 0x15
     7fe:	9e 89       	ldd	r25, Y+22	; 0x16
     800:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     804:	88 23       	and	r24, r24
     806:	2c f4       	brge	.+10     	; 0x812 <lcd_cmd+0x1ac>
		__ticks = 1;
     808:	81 e0       	ldi	r24, 0x01	; 1
     80a:	90 e0       	ldi	r25, 0x00	; 0
     80c:	98 8f       	std	Y+24, r25	; 0x18
     80e:	8f 8b       	std	Y+23, r24	; 0x17
     810:	42 c0       	rjmp	.+132    	; 0x896 <lcd_cmd+0x230>
	else if (__tmp > 65535)
     812:	20 e0       	ldi	r18, 0x00	; 0
     814:	3f ef       	ldi	r19, 0xFF	; 255
     816:	4f e7       	ldi	r20, 0x7F	; 127
     818:	57 e4       	ldi	r21, 0x47	; 71
     81a:	6b 89       	ldd	r22, Y+19	; 0x13
     81c:	7c 89       	ldd	r23, Y+20	; 0x14
     81e:	8d 89       	ldd	r24, Y+21	; 0x15
     820:	9e 89       	ldd	r25, Y+22	; 0x16
     822:	0e 94 ab 08 	call	0x1156	; 0x1156 <__gtsf2>
     826:	18 16       	cp	r1, r24
     828:	64 f5       	brge	.+88     	; 0x882 <lcd_cmd+0x21c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     82a:	20 e0       	ldi	r18, 0x00	; 0
     82c:	30 e0       	ldi	r19, 0x00	; 0
     82e:	40 e2       	ldi	r20, 0x20	; 32
     830:	51 e4       	ldi	r21, 0x41	; 65
     832:	6f 85       	ldd	r22, Y+15	; 0x0f
     834:	78 89       	ldd	r23, Y+16	; 0x10
     836:	89 89       	ldd	r24, Y+17	; 0x11
     838:	9a 89       	ldd	r25, Y+18	; 0x12
     83a:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     83e:	dc 01       	movw	r26, r24
     840:	cb 01       	movw	r24, r22
     842:	bc 01       	movw	r22, r24
     844:	cd 01       	movw	r24, r26
     846:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     84a:	dc 01       	movw	r26, r24
     84c:	cb 01       	movw	r24, r22
     84e:	98 8f       	std	Y+24, r25	; 0x18
     850:	8f 8b       	std	Y+23, r24	; 0x17
     852:	12 c0       	rjmp	.+36     	; 0x878 <lcd_cmd+0x212>
     854:	80 e9       	ldi	r24, 0x90	; 144
     856:	91 e0       	ldi	r25, 0x01	; 1
     858:	9a 8f       	std	Y+26, r25	; 0x1a
     85a:	89 8f       	std	Y+25, r24	; 0x19
     85c:	89 8d       	ldd	r24, Y+25	; 0x19
     85e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     860:	8c 01       	movw	r16, r24
     862:	c8 01       	movw	r24, r16
     864:	01 97       	sbiw	r24, 0x01	; 1
     866:	f1 f7       	brne	.-4      	; 0x864 <lcd_cmd+0x1fe>
     868:	8c 01       	movw	r16, r24
     86a:	1a 8f       	std	Y+26, r17	; 0x1a
     86c:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     86e:	8f 89       	ldd	r24, Y+23	; 0x17
     870:	98 8d       	ldd	r25, Y+24	; 0x18
     872:	01 97       	sbiw	r24, 0x01	; 1
     874:	98 8f       	std	Y+24, r25	; 0x18
     876:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     878:	8f 89       	ldd	r24, Y+23	; 0x17
     87a:	98 8d       	ldd	r25, Y+24	; 0x18
     87c:	00 97       	sbiw	r24, 0x00	; 0
     87e:	51 f7       	brne	.-44     	; 0x854 <lcd_cmd+0x1ee>
     880:	17 c0       	rjmp	.+46     	; 0x8b0 <lcd_cmd+0x24a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     882:	6b 89       	ldd	r22, Y+19	; 0x13
     884:	7c 89       	ldd	r23, Y+20	; 0x14
     886:	8d 89       	ldd	r24, Y+21	; 0x15
     888:	9e 89       	ldd	r25, Y+22	; 0x16
     88a:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     88e:	dc 01       	movw	r26, r24
     890:	cb 01       	movw	r24, r22
     892:	98 8f       	std	Y+24, r25	; 0x18
     894:	8f 8b       	std	Y+23, r24	; 0x17
     896:	8f 89       	ldd	r24, Y+23	; 0x17
     898:	98 8d       	ldd	r25, Y+24	; 0x18
     89a:	9c 8f       	std	Y+28, r25	; 0x1c
     89c:	8b 8f       	std	Y+27, r24	; 0x1b
     89e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     8a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     8a2:	8c 01       	movw	r16, r24
     8a4:	f8 01       	movw	r30, r16
     8a6:	31 97       	sbiw	r30, 0x01	; 1
     8a8:	f1 f7       	brne	.-4      	; 0x8a6 <lcd_cmd+0x240>
     8aa:	8f 01       	movw	r16, r30
     8ac:	1c 8f       	std	Y+28, r17	; 0x1c
     8ae:	0b 8f       	std	Y+27, r16	; 0x1b
	_delay_ms(2);
	_delay_ms(2);
}
     8b0:	6d 96       	adiw	r28, 0x1d	; 29
     8b2:	0f b6       	in	r0, 0x3f	; 63
     8b4:	f8 94       	cli
     8b6:	de bf       	out	0x3e, r29	; 62
     8b8:	0f be       	out	0x3f, r0	; 63
     8ba:	cd bf       	out	0x3d, r28	; 61
     8bc:	df 91       	pop	r29
     8be:	cf 91       	pop	r28
     8c0:	1f 91       	pop	r17
     8c2:	0f 91       	pop	r16
     8c4:	08 95       	ret

000008c6 <lcd_init>:


void lcd_init (void)
{
     8c6:	cf 93       	push	r28
     8c8:	df 93       	push	r29
     8ca:	cd b7       	in	r28, 0x3d	; 61
     8cc:	de b7       	in	r29, 0x3e	; 62
	lcd_reset();         // Call LCD reset lcd_cmd(0×28);
     8ce:	0e 94 52 00 	call	0xa4	; 0xa4 <lcd_reset>
	// 4-bit mode – 2 line – 5×7 font.
	lcd_cmd(0x0C);       // Display no cursor – no blink.
     8d2:	8c e0       	ldi	r24, 0x0C	; 12
     8d4:	0e 94 33 03 	call	0x666	; 0x666 <lcd_cmd>
	lcd_cmd(0x06);       // Automatic Increment – No Display shift.
     8d8:	86 e0       	ldi	r24, 0x06	; 6
     8da:	0e 94 33 03 	call	0x666	; 0x666 <lcd_cmd>
	lcd_cmd(0x80);       // Address DDRAM with 0 offset 80h.
     8de:	80 e8       	ldi	r24, 0x80	; 128
     8e0:	0e 94 33 03 	call	0x666	; 0x666 <lcd_cmd>
}
     8e4:	df 91       	pop	r29
     8e6:	cf 91       	pop	r28
     8e8:	08 95       	ret

000008ea <lcd_data>:


// Function to display single Character
void lcd_data (unsigned char dat)
{
     8ea:	0f 93       	push	r16
     8ec:	1f 93       	push	r17
     8ee:	cf 93       	push	r28
     8f0:	df 93       	push	r29
     8f2:	cd b7       	in	r28, 0x3d	; 61
     8f4:	de b7       	in	r29, 0x3e	; 62
     8f6:	6d 97       	sbiw	r28, 0x1d	; 29
     8f8:	0f b6       	in	r0, 0x3f	; 63
     8fa:	f8 94       	cli
     8fc:	de bf       	out	0x3e, r29	; 62
     8fe:	0f be       	out	0x3f, r0	; 63
     900:	cd bf       	out	0x3d, r28	; 61
     902:	8d 8f       	std	Y+29, r24	; 0x1d
	LCD_PORT = ((dat & 0xF0)|LCD_EN|LCD_RS);
     904:	8b e2       	ldi	r24, 0x2B	; 43
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	2d 8d       	ldd	r18, Y+29	; 0x1d
     90a:	20 7f       	andi	r18, 0xF0	; 240
     90c:	26 60       	ori	r18, 0x06	; 6
     90e:	fc 01       	movw	r30, r24
     910:	20 83       	st	Z, r18
	LCD_PORT = ((dat & 0xF0)|LCD_RS);
     912:	8b e2       	ldi	r24, 0x2B	; 43
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	2d 8d       	ldd	r18, Y+29	; 0x1d
     918:	20 7f       	andi	r18, 0xF0	; 240
     91a:	24 60       	ori	r18, 0x04	; 4
     91c:	fc 01       	movw	r30, r24
     91e:	20 83       	st	Z, r18
	LCD_PORT = (((dat << 4) & 0xF0)|LCD_EN|LCD_RS);
     920:	8b e2       	ldi	r24, 0x2B	; 43
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	2d 8d       	ldd	r18, Y+29	; 0x1d
     926:	22 2f       	mov	r18, r18
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	22 95       	swap	r18
     92c:	32 95       	swap	r19
     92e:	30 7f       	andi	r19, 0xF0	; 240
     930:	32 27       	eor	r19, r18
     932:	20 7f       	andi	r18, 0xF0	; 240
     934:	32 27       	eor	r19, r18
     936:	26 60       	ori	r18, 0x06	; 6
     938:	fc 01       	movw	r30, r24
     93a:	20 83       	st	Z, r18
	LCD_PORT = (((dat << 4) & 0xF0)|LCD_RS);
     93c:	8b e2       	ldi	r24, 0x2B	; 43
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	2d 8d       	ldd	r18, Y+29	; 0x1d
     942:	22 2f       	mov	r18, r18
     944:	30 e0       	ldi	r19, 0x00	; 0
     946:	22 95       	swap	r18
     948:	32 95       	swap	r19
     94a:	30 7f       	andi	r19, 0xF0	; 240
     94c:	32 27       	eor	r19, r18
     94e:	20 7f       	andi	r18, 0xF0	; 240
     950:	32 27       	eor	r19, r18
     952:	24 60       	ori	r18, 0x04	; 4
     954:	fc 01       	movw	r30, r24
     956:	20 83       	st	Z, r18
     958:	80 e0       	ldi	r24, 0x00	; 0
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	a0 e0       	ldi	r26, 0x00	; 0
     95e:	b0 e4       	ldi	r27, 0x40	; 64
     960:	89 83       	std	Y+1, r24	; 0x01
     962:	9a 83       	std	Y+2, r25	; 0x02
     964:	ab 83       	std	Y+3, r26	; 0x03
     966:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     968:	20 e0       	ldi	r18, 0x00	; 0
     96a:	30 e0       	ldi	r19, 0x00	; 0
     96c:	4a e7       	ldi	r20, 0x7A	; 122
     96e:	55 e4       	ldi	r21, 0x45	; 69
     970:	69 81       	ldd	r22, Y+1	; 0x01
     972:	7a 81       	ldd	r23, Y+2	; 0x02
     974:	8b 81       	ldd	r24, Y+3	; 0x03
     976:	9c 81       	ldd	r25, Y+4	; 0x04
     978:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     97c:	dc 01       	movw	r26, r24
     97e:	cb 01       	movw	r24, r22
     980:	8d 83       	std	Y+5, r24	; 0x05
     982:	9e 83       	std	Y+6, r25	; 0x06
     984:	af 83       	std	Y+7, r26	; 0x07
     986:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     988:	20 e0       	ldi	r18, 0x00	; 0
     98a:	30 e0       	ldi	r19, 0x00	; 0
     98c:	40 e8       	ldi	r20, 0x80	; 128
     98e:	5f e3       	ldi	r21, 0x3F	; 63
     990:	6d 81       	ldd	r22, Y+5	; 0x05
     992:	7e 81       	ldd	r23, Y+6	; 0x06
     994:	8f 81       	ldd	r24, Y+7	; 0x07
     996:	98 85       	ldd	r25, Y+8	; 0x08
     998:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     99c:	88 23       	and	r24, r24
     99e:	2c f4       	brge	.+10     	; 0x9aa <__stack+0xab>
		__ticks = 1;
     9a0:	81 e0       	ldi	r24, 0x01	; 1
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	9a 87       	std	Y+10, r25	; 0x0a
     9a6:	89 87       	std	Y+9, r24	; 0x09
     9a8:	42 c0       	rjmp	.+132    	; 0xa2e <__stack+0x12f>
	else if (__tmp > 65535)
     9aa:	20 e0       	ldi	r18, 0x00	; 0
     9ac:	3f ef       	ldi	r19, 0xFF	; 255
     9ae:	4f e7       	ldi	r20, 0x7F	; 127
     9b0:	57 e4       	ldi	r21, 0x47	; 71
     9b2:	6d 81       	ldd	r22, Y+5	; 0x05
     9b4:	7e 81       	ldd	r23, Y+6	; 0x06
     9b6:	8f 81       	ldd	r24, Y+7	; 0x07
     9b8:	98 85       	ldd	r25, Y+8	; 0x08
     9ba:	0e 94 ab 08 	call	0x1156	; 0x1156 <__gtsf2>
     9be:	18 16       	cp	r1, r24
     9c0:	64 f5       	brge	.+88     	; 0xa1a <__stack+0x11b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9c2:	20 e0       	ldi	r18, 0x00	; 0
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	40 e2       	ldi	r20, 0x20	; 32
     9c8:	51 e4       	ldi	r21, 0x41	; 65
     9ca:	69 81       	ldd	r22, Y+1	; 0x01
     9cc:	7a 81       	ldd	r23, Y+2	; 0x02
     9ce:	8b 81       	ldd	r24, Y+3	; 0x03
     9d0:	9c 81       	ldd	r25, Y+4	; 0x04
     9d2:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     9d6:	dc 01       	movw	r26, r24
     9d8:	cb 01       	movw	r24, r22
     9da:	bc 01       	movw	r22, r24
     9dc:	cd 01       	movw	r24, r26
     9de:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     9e2:	dc 01       	movw	r26, r24
     9e4:	cb 01       	movw	r24, r22
     9e6:	9a 87       	std	Y+10, r25	; 0x0a
     9e8:	89 87       	std	Y+9, r24	; 0x09
     9ea:	12 c0       	rjmp	.+36     	; 0xa10 <__stack+0x111>
     9ec:	80 e9       	ldi	r24, 0x90	; 144
     9ee:	91 e0       	ldi	r25, 0x01	; 1
     9f0:	9c 87       	std	Y+12, r25	; 0x0c
     9f2:	8b 87       	std	Y+11, r24	; 0x0b
     9f4:	8b 85       	ldd	r24, Y+11	; 0x0b
     9f6:	9c 85       	ldd	r25, Y+12	; 0x0c
     9f8:	8c 01       	movw	r16, r24
     9fa:	c8 01       	movw	r24, r16
     9fc:	01 97       	sbiw	r24, 0x01	; 1
     9fe:	f1 f7       	brne	.-4      	; 0x9fc <__stack+0xfd>
     a00:	8c 01       	movw	r16, r24
     a02:	1c 87       	std	Y+12, r17	; 0x0c
     a04:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a06:	89 85       	ldd	r24, Y+9	; 0x09
     a08:	9a 85       	ldd	r25, Y+10	; 0x0a
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	9a 87       	std	Y+10, r25	; 0x0a
     a0e:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a10:	89 85       	ldd	r24, Y+9	; 0x09
     a12:	9a 85       	ldd	r25, Y+10	; 0x0a
     a14:	00 97       	sbiw	r24, 0x00	; 0
     a16:	51 f7       	brne	.-44     	; 0x9ec <__stack+0xed>
     a18:	17 c0       	rjmp	.+46     	; 0xa48 <__stack+0x149>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a1a:	6d 81       	ldd	r22, Y+5	; 0x05
     a1c:	7e 81       	ldd	r23, Y+6	; 0x06
     a1e:	8f 81       	ldd	r24, Y+7	; 0x07
     a20:	98 85       	ldd	r25, Y+8	; 0x08
     a22:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     a26:	dc 01       	movw	r26, r24
     a28:	cb 01       	movw	r24, r22
     a2a:	9a 87       	std	Y+10, r25	; 0x0a
     a2c:	89 87       	std	Y+9, r24	; 0x09
     a2e:	89 85       	ldd	r24, Y+9	; 0x09
     a30:	9a 85       	ldd	r25, Y+10	; 0x0a
     a32:	9e 87       	std	Y+14, r25	; 0x0e
     a34:	8d 87       	std	Y+13, r24	; 0x0d
     a36:	8d 85       	ldd	r24, Y+13	; 0x0d
     a38:	9e 85       	ldd	r25, Y+14	; 0x0e
     a3a:	8c 01       	movw	r16, r24
     a3c:	f8 01       	movw	r30, r16
     a3e:	31 97       	sbiw	r30, 0x01	; 1
     a40:	f1 f7       	brne	.-4      	; 0xa3e <__stack+0x13f>
     a42:	8f 01       	movw	r16, r30
     a44:	1e 87       	std	Y+14, r17	; 0x0e
     a46:	0d 87       	std	Y+13, r16	; 0x0d
     a48:	80 e0       	ldi	r24, 0x00	; 0
     a4a:	90 e0       	ldi	r25, 0x00	; 0
     a4c:	a0 e0       	ldi	r26, 0x00	; 0
     a4e:	b0 e4       	ldi	r27, 0x40	; 64
     a50:	8f 87       	std	Y+15, r24	; 0x0f
     a52:	98 8b       	std	Y+16, r25	; 0x10
     a54:	a9 8b       	std	Y+17, r26	; 0x11
     a56:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     a58:	20 e0       	ldi	r18, 0x00	; 0
     a5a:	30 e0       	ldi	r19, 0x00	; 0
     a5c:	4a e7       	ldi	r20, 0x7A	; 122
     a5e:	55 e4       	ldi	r21, 0x45	; 69
     a60:	6f 85       	ldd	r22, Y+15	; 0x0f
     a62:	78 89       	ldd	r23, Y+16	; 0x10
     a64:	89 89       	ldd	r24, Y+17	; 0x11
     a66:	9a 89       	ldd	r25, Y+18	; 0x12
     a68:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     a6c:	dc 01       	movw	r26, r24
     a6e:	cb 01       	movw	r24, r22
     a70:	8b 8b       	std	Y+19, r24	; 0x13
     a72:	9c 8b       	std	Y+20, r25	; 0x14
     a74:	ad 8b       	std	Y+21, r26	; 0x15
     a76:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     a78:	20 e0       	ldi	r18, 0x00	; 0
     a7a:	30 e0       	ldi	r19, 0x00	; 0
     a7c:	40 e8       	ldi	r20, 0x80	; 128
     a7e:	5f e3       	ldi	r21, 0x3F	; 63
     a80:	6b 89       	ldd	r22, Y+19	; 0x13
     a82:	7c 89       	ldd	r23, Y+20	; 0x14
     a84:	8d 89       	ldd	r24, Y+21	; 0x15
     a86:	9e 89       	ldd	r25, Y+22	; 0x16
     a88:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     a8c:	88 23       	and	r24, r24
     a8e:	2c f4       	brge	.+10     	; 0xa9a <__stack+0x19b>
		__ticks = 1;
     a90:	81 e0       	ldi	r24, 0x01	; 1
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	98 8f       	std	Y+24, r25	; 0x18
     a96:	8f 8b       	std	Y+23, r24	; 0x17
     a98:	42 c0       	rjmp	.+132    	; 0xb1e <__stack+0x21f>
	else if (__tmp > 65535)
     a9a:	20 e0       	ldi	r18, 0x00	; 0
     a9c:	3f ef       	ldi	r19, 0xFF	; 255
     a9e:	4f e7       	ldi	r20, 0x7F	; 127
     aa0:	57 e4       	ldi	r21, 0x47	; 71
     aa2:	6b 89       	ldd	r22, Y+19	; 0x13
     aa4:	7c 89       	ldd	r23, Y+20	; 0x14
     aa6:	8d 89       	ldd	r24, Y+21	; 0x15
     aa8:	9e 89       	ldd	r25, Y+22	; 0x16
     aaa:	0e 94 ab 08 	call	0x1156	; 0x1156 <__gtsf2>
     aae:	18 16       	cp	r1, r24
     ab0:	64 f5       	brge	.+88     	; 0xb0a <__stack+0x20b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ab2:	20 e0       	ldi	r18, 0x00	; 0
     ab4:	30 e0       	ldi	r19, 0x00	; 0
     ab6:	40 e2       	ldi	r20, 0x20	; 32
     ab8:	51 e4       	ldi	r21, 0x41	; 65
     aba:	6f 85       	ldd	r22, Y+15	; 0x0f
     abc:	78 89       	ldd	r23, Y+16	; 0x10
     abe:	89 89       	ldd	r24, Y+17	; 0x11
     ac0:	9a 89       	ldd	r25, Y+18	; 0x12
     ac2:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__mulsf3>
     ac6:	dc 01       	movw	r26, r24
     ac8:	cb 01       	movw	r24, r22
     aca:	bc 01       	movw	r22, r24
     acc:	cd 01       	movw	r24, r26
     ace:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     ad2:	dc 01       	movw	r26, r24
     ad4:	cb 01       	movw	r24, r22
     ad6:	98 8f       	std	Y+24, r25	; 0x18
     ad8:	8f 8b       	std	Y+23, r24	; 0x17
     ada:	12 c0       	rjmp	.+36     	; 0xb00 <__stack+0x201>
     adc:	80 e9       	ldi	r24, 0x90	; 144
     ade:	91 e0       	ldi	r25, 0x01	; 1
     ae0:	9a 8f       	std	Y+26, r25	; 0x1a
     ae2:	89 8f       	std	Y+25, r24	; 0x19
     ae4:	89 8d       	ldd	r24, Y+25	; 0x19
     ae6:	9a 8d       	ldd	r25, Y+26	; 0x1a
     ae8:	8c 01       	movw	r16, r24
     aea:	c8 01       	movw	r24, r16
     aec:	01 97       	sbiw	r24, 0x01	; 1
     aee:	f1 f7       	brne	.-4      	; 0xaec <__stack+0x1ed>
     af0:	8c 01       	movw	r16, r24
     af2:	1a 8f       	std	Y+26, r17	; 0x1a
     af4:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     af6:	8f 89       	ldd	r24, Y+23	; 0x17
     af8:	98 8d       	ldd	r25, Y+24	; 0x18
     afa:	01 97       	sbiw	r24, 0x01	; 1
     afc:	98 8f       	std	Y+24, r25	; 0x18
     afe:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b00:	8f 89       	ldd	r24, Y+23	; 0x17
     b02:	98 8d       	ldd	r25, Y+24	; 0x18
     b04:	00 97       	sbiw	r24, 0x00	; 0
     b06:	51 f7       	brne	.-44     	; 0xadc <__stack+0x1dd>
     b08:	17 c0       	rjmp	.+46     	; 0xb38 <__stack+0x239>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b0a:	6b 89       	ldd	r22, Y+19	; 0x13
     b0c:	7c 89       	ldd	r23, Y+20	; 0x14
     b0e:	8d 89       	ldd	r24, Y+21	; 0x15
     b10:	9e 89       	ldd	r25, Y+22	; 0x16
     b12:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__fixunssfsi>
     b16:	dc 01       	movw	r26, r24
     b18:	cb 01       	movw	r24, r22
     b1a:	98 8f       	std	Y+24, r25	; 0x18
     b1c:	8f 8b       	std	Y+23, r24	; 0x17
     b1e:	8f 89       	ldd	r24, Y+23	; 0x17
     b20:	98 8d       	ldd	r25, Y+24	; 0x18
     b22:	9c 8f       	std	Y+28, r25	; 0x1c
     b24:	8b 8f       	std	Y+27, r24	; 0x1b
     b26:	8b 8d       	ldd	r24, Y+27	; 0x1b
     b28:	9c 8d       	ldd	r25, Y+28	; 0x1c
     b2a:	8c 01       	movw	r16, r24
     b2c:	f8 01       	movw	r30, r16
     b2e:	31 97       	sbiw	r30, 0x01	; 1
     b30:	f1 f7       	brne	.-4      	; 0xb2e <__stack+0x22f>
     b32:	8f 01       	movw	r16, r30
     b34:	1c 8f       	std	Y+28, r17	; 0x1c
     b36:	0b 8f       	std	Y+27, r16	; 0x1b
	_delay_ms(2);
	_delay_ms(2);
}
     b38:	6d 96       	adiw	r28, 0x1d	; 29
     b3a:	0f b6       	in	r0, 0x3f	; 63
     b3c:	f8 94       	cli
     b3e:	de bf       	out	0x3e, r29	; 62
     b40:	0f be       	out	0x3f, r0	; 63
     b42:	cd bf       	out	0x3d, r28	; 61
     b44:	df 91       	pop	r29
     b46:	cf 91       	pop	r28
     b48:	1f 91       	pop	r17
     b4a:	0f 91       	pop	r16
     b4c:	08 95       	ret

00000b4e <lcd_puts>:


// Function to display a String
void lcd_puts(char *a)
{
     b4e:	cf 93       	push	r28
     b50:	df 93       	push	r29
     b52:	00 d0       	rcall	.+0      	; 0xb54 <lcd_puts+0x6>
     b54:	00 d0       	rcall	.+0      	; 0xb56 <lcd_puts+0x8>
     b56:	cd b7       	in	r28, 0x3d	; 61
     b58:	de b7       	in	r29, 0x3e	; 62
     b5a:	9c 83       	std	Y+4, r25	; 0x04
     b5c:	8b 83       	std	Y+3, r24	; 0x03
	unsigned int i;
	for(i=0;a[i]!=0;i++)
     b5e:	1a 82       	std	Y+2, r1	; 0x02
     b60:	19 82       	std	Y+1, r1	; 0x01
     b62:	0f c0       	rjmp	.+30     	; 0xb82 <lcd_puts+0x34>
	lcd_data(a[i]);
     b64:	2b 81       	ldd	r18, Y+3	; 0x03
     b66:	3c 81       	ldd	r19, Y+4	; 0x04
     b68:	89 81       	ldd	r24, Y+1	; 0x01
     b6a:	9a 81       	ldd	r25, Y+2	; 0x02
     b6c:	82 0f       	add	r24, r18
     b6e:	93 1f       	adc	r25, r19
     b70:	fc 01       	movw	r30, r24
     b72:	80 81       	ld	r24, Z
     b74:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_data>

// Function to display a String
void lcd_puts(char *a)
{
	unsigned int i;
	for(i=0;a[i]!=0;i++)
     b78:	89 81       	ldd	r24, Y+1	; 0x01
     b7a:	9a 81       	ldd	r25, Y+2	; 0x02
     b7c:	01 96       	adiw	r24, 0x01	; 1
     b7e:	9a 83       	std	Y+2, r25	; 0x02
     b80:	89 83       	std	Y+1, r24	; 0x01
     b82:	2b 81       	ldd	r18, Y+3	; 0x03
     b84:	3c 81       	ldd	r19, Y+4	; 0x04
     b86:	89 81       	ldd	r24, Y+1	; 0x01
     b88:	9a 81       	ldd	r25, Y+2	; 0x02
     b8a:	82 0f       	add	r24, r18
     b8c:	93 1f       	adc	r25, r19
     b8e:	fc 01       	movw	r30, r24
     b90:	80 81       	ld	r24, Z
     b92:	88 23       	and	r24, r24
     b94:	39 f7       	brne	.-50     	; 0xb64 <lcd_puts+0x16>
	lcd_data(a[i]);
}
     b96:	0f 90       	pop	r0
     b98:	0f 90       	pop	r0
     b9a:	0f 90       	pop	r0
     b9c:	0f 90       	pop	r0
     b9e:	df 91       	pop	r29
     ba0:	cf 91       	pop	r28
     ba2:	08 95       	ret

00000ba4 <main>:

int main(void) {
     ba4:	cf 93       	push	r28
     ba6:	df 93       	push	r29
     ba8:	cd b7       	in	r28, 0x3d	; 61
     baa:	de b7       	in	r29, 0x3e	; 62
	lcd_init();
     bac:	0e 94 63 04 	call	0x8c6	; 0x8c6 <lcd_init>
	lcd_puts("VITOR ARAUJO");
     bb0:	80 e0       	ldi	r24, 0x00	; 0
     bb2:	91 e0       	ldi	r25, 0x01	; 1
     bb4:	0e 94 a7 05 	call	0xb4e	; 0xb4e <lcd_puts>
     bb8:	80 e0       	ldi	r24, 0x00	; 0
     bba:	90 e0       	ldi	r25, 0x00	; 0

}
     bbc:	df 91       	pop	r29
     bbe:	cf 91       	pop	r28
     bc0:	08 95       	ret

00000bc2 <__fixunssfsi>:
     bc2:	cf 92       	push	r12
     bc4:	df 92       	push	r13
     bc6:	ef 92       	push	r14
     bc8:	ff 92       	push	r15
     bca:	0f 93       	push	r16
     bcc:	1f 93       	push	r17
     bce:	6b 01       	movw	r12, r22
     bd0:	7c 01       	movw	r14, r24
     bd2:	20 e0       	ldi	r18, 0x00	; 0
     bd4:	30 e0       	ldi	r19, 0x00	; 0
     bd6:	40 e0       	ldi	r20, 0x00	; 0
     bd8:	5f e4       	ldi	r21, 0x4F	; 79
     bda:	0e 94 da 08 	call	0x11b4	; 0x11b4 <__gesf2>
     bde:	87 fd       	sbrc	r24, 7
     be0:	0e c0       	rjmp	.+28     	; 0xbfe <__fixunssfsi+0x3c>
     be2:	20 e0       	ldi	r18, 0x00	; 0
     be4:	30 e0       	ldi	r19, 0x00	; 0
     be6:	40 e0       	ldi	r20, 0x00	; 0
     be8:	5f e4       	ldi	r21, 0x4F	; 79
     bea:	c7 01       	movw	r24, r14
     bec:	b6 01       	movw	r22, r12
     bee:	0e 94 96 07 	call	0xf2c	; 0xf2c <__subsf3>
     bf2:	0e 94 38 09 	call	0x1270	; 0x1270 <__fixsfsi>
     bf6:	8b 01       	movw	r16, r22
     bf8:	9c 01       	movw	r18, r24
     bfa:	30 58       	subi	r19, 0x80	; 128
     bfc:	06 c0       	rjmp	.+12     	; 0xc0a <__fixunssfsi+0x48>
     bfe:	c7 01       	movw	r24, r14
     c00:	b6 01       	movw	r22, r12
     c02:	0e 94 38 09 	call	0x1270	; 0x1270 <__fixsfsi>
     c06:	8b 01       	movw	r16, r22
     c08:	9c 01       	movw	r18, r24
     c0a:	b8 01       	movw	r22, r16
     c0c:	c9 01       	movw	r24, r18
     c0e:	1f 91       	pop	r17
     c10:	0f 91       	pop	r16
     c12:	ff 90       	pop	r15
     c14:	ef 90       	pop	r14
     c16:	df 90       	pop	r13
     c18:	cf 90       	pop	r12
     c1a:	08 95       	ret

00000c1c <_fpadd_parts>:
     c1c:	a4 e0       	ldi	r26, 0x04	; 4
     c1e:	b0 e0       	ldi	r27, 0x00	; 0
     c20:	e4 e1       	ldi	r30, 0x14	; 20
     c22:	f6 e0       	ldi	r31, 0x06	; 6
     c24:	0c 94 23 0b 	jmp	0x1646	; 0x1646 <__prologue_saves__+0x4>
     c28:	7c 01       	movw	r14, r24
     c2a:	6a 01       	movw	r12, r20
     c2c:	fc 01       	movw	r30, r24
     c2e:	80 81       	ld	r24, Z
     c30:	82 30       	cpi	r24, 0x02	; 2
     c32:	08 f4       	brcc	.+2      	; 0xc36 <_fpadd_parts+0x1a>
     c34:	4a c1       	rjmp	.+660    	; 0xeca <_fpadd_parts+0x2ae>
     c36:	fb 01       	movw	r30, r22
     c38:	90 81       	ld	r25, Z
     c3a:	92 30       	cpi	r25, 0x02	; 2
     c3c:	08 f4       	brcc	.+2      	; 0xc40 <_fpadd_parts+0x24>
     c3e:	42 c1       	rjmp	.+644    	; 0xec4 <_fpadd_parts+0x2a8>
     c40:	84 30       	cpi	r24, 0x04	; 4
     c42:	79 f4       	brne	.+30     	; 0xc62 <_fpadd_parts+0x46>
     c44:	94 30       	cpi	r25, 0x04	; 4
     c46:	09 f0       	breq	.+2      	; 0xc4a <_fpadd_parts+0x2e>
     c48:	40 c1       	rjmp	.+640    	; 0xeca <_fpadd_parts+0x2ae>
     c4a:	f7 01       	movw	r30, r14
     c4c:	91 81       	ldd	r25, Z+1	; 0x01
     c4e:	fb 01       	movw	r30, r22
     c50:	81 81       	ldd	r24, Z+1	; 0x01
     c52:	98 17       	cp	r25, r24
     c54:	09 f4       	brne	.+2      	; 0xc58 <_fpadd_parts+0x3c>
     c56:	39 c1       	rjmp	.+626    	; 0xeca <_fpadd_parts+0x2ae>
     c58:	ad e0       	ldi	r26, 0x0D	; 13
     c5a:	ea 2e       	mov	r14, r26
     c5c:	a1 e0       	ldi	r26, 0x01	; 1
     c5e:	fa 2e       	mov	r15, r26
     c60:	34 c1       	rjmp	.+616    	; 0xeca <_fpadd_parts+0x2ae>
     c62:	94 30       	cpi	r25, 0x04	; 4
     c64:	09 f4       	brne	.+2      	; 0xc68 <_fpadd_parts+0x4c>
     c66:	2e c1       	rjmp	.+604    	; 0xec4 <_fpadd_parts+0x2a8>
     c68:	92 30       	cpi	r25, 0x02	; 2
     c6a:	91 f4       	brne	.+36     	; 0xc90 <_fpadd_parts+0x74>
     c6c:	82 30       	cpi	r24, 0x02	; 2
     c6e:	09 f0       	breq	.+2      	; 0xc72 <_fpadd_parts+0x56>
     c70:	2c c1       	rjmp	.+600    	; 0xeca <_fpadd_parts+0x2ae>
     c72:	88 e0       	ldi	r24, 0x08	; 8
     c74:	f7 01       	movw	r30, r14
     c76:	da 01       	movw	r26, r20
     c78:	01 90       	ld	r0, Z+
     c7a:	0d 92       	st	X+, r0
     c7c:	8a 95       	dec	r24
     c7e:	e1 f7       	brne	.-8      	; 0xc78 <_fpadd_parts+0x5c>
     c80:	fb 01       	movw	r30, r22
     c82:	81 81       	ldd	r24, Z+1	; 0x01
     c84:	f7 01       	movw	r30, r14
     c86:	91 81       	ldd	r25, Z+1	; 0x01
     c88:	89 23       	and	r24, r25
     c8a:	fa 01       	movw	r30, r20
     c8c:	81 83       	std	Z+1, r24	; 0x01
     c8e:	1c c1       	rjmp	.+568    	; 0xec8 <_fpadd_parts+0x2ac>
     c90:	82 30       	cpi	r24, 0x02	; 2
     c92:	09 f4       	brne	.+2      	; 0xc96 <_fpadd_parts+0x7a>
     c94:	17 c1       	rjmp	.+558    	; 0xec4 <_fpadd_parts+0x2a8>
     c96:	f7 01       	movw	r30, r14
     c98:	82 81       	ldd	r24, Z+2	; 0x02
     c9a:	93 81       	ldd	r25, Z+3	; 0x03
     c9c:	fb 01       	movw	r30, r22
     c9e:	a2 81       	ldd	r26, Z+2	; 0x02
     ca0:	b3 81       	ldd	r27, Z+3	; 0x03
     ca2:	f7 01       	movw	r30, r14
     ca4:	04 81       	ldd	r16, Z+4	; 0x04
     ca6:	15 81       	ldd	r17, Z+5	; 0x05
     ca8:	26 81       	ldd	r18, Z+6	; 0x06
     caa:	37 81       	ldd	r19, Z+7	; 0x07
     cac:	fb 01       	movw	r30, r22
     cae:	84 80       	ldd	r8, Z+4	; 0x04
     cb0:	95 80       	ldd	r9, Z+5	; 0x05
     cb2:	a6 80       	ldd	r10, Z+6	; 0x06
     cb4:	b7 80       	ldd	r11, Z+7	; 0x07
     cb6:	fc 01       	movw	r30, r24
     cb8:	ea 1b       	sub	r30, r26
     cba:	fb 0b       	sbc	r31, r27
     cbc:	af 01       	movw	r20, r30
     cbe:	f7 ff       	sbrs	r31, 7
     cc0:	04 c0       	rjmp	.+8      	; 0xcca <_fpadd_parts+0xae>
     cc2:	44 27       	eor	r20, r20
     cc4:	55 27       	eor	r21, r21
     cc6:	4e 1b       	sub	r20, r30
     cc8:	5f 0b       	sbc	r21, r31
     cca:	40 32       	cpi	r20, 0x20	; 32
     ccc:	51 05       	cpc	r21, r1
     cce:	0c f0       	brlt	.+2      	; 0xcd2 <_fpadd_parts+0xb6>
     cd0:	74 c0       	rjmp	.+232    	; 0xdba <_fpadd_parts+0x19e>
     cd2:	1e 16       	cp	r1, r30
     cd4:	1f 06       	cpc	r1, r31
     cd6:	b4 f5       	brge	.+108    	; 0xd44 <_fpadd_parts+0x128>
     cd8:	24 01       	movw	r4, r8
     cda:	35 01       	movw	r6, r10
     cdc:	04 2e       	mov	r0, r20
     cde:	04 c0       	rjmp	.+8      	; 0xce8 <_fpadd_parts+0xcc>
     ce0:	76 94       	lsr	r7
     ce2:	67 94       	ror	r6
     ce4:	57 94       	ror	r5
     ce6:	47 94       	ror	r4
     ce8:	0a 94       	dec	r0
     cea:	d2 f7       	brpl	.-12     	; 0xce0 <_fpadd_parts+0xc4>
     cec:	49 82       	std	Y+1, r4	; 0x01
     cee:	5a 82       	std	Y+2, r5	; 0x02
     cf0:	6b 82       	std	Y+3, r6	; 0x03
     cf2:	7c 82       	std	Y+4, r7	; 0x04
     cf4:	41 2c       	mov	r4, r1
     cf6:	51 2c       	mov	r5, r1
     cf8:	32 01       	movw	r6, r4
     cfa:	43 94       	inc	r4
     cfc:	04 c0       	rjmp	.+8      	; 0xd06 <_fpadd_parts+0xea>
     cfe:	44 0c       	add	r4, r4
     d00:	55 1c       	adc	r5, r5
     d02:	66 1c       	adc	r6, r6
     d04:	77 1c       	adc	r7, r7
     d06:	4a 95       	dec	r20
     d08:	d2 f7       	brpl	.-12     	; 0xcfe <_fpadd_parts+0xe2>
     d0a:	41 e0       	ldi	r20, 0x01	; 1
     d0c:	44 1a       	sub	r4, r20
     d0e:	51 08       	sbc	r5, r1
     d10:	61 08       	sbc	r6, r1
     d12:	71 08       	sbc	r7, r1
     d14:	48 20       	and	r4, r8
     d16:	59 20       	and	r5, r9
     d18:	6a 20       	and	r6, r10
     d1a:	7b 20       	and	r7, r11
     d1c:	81 2c       	mov	r8, r1
     d1e:	91 2c       	mov	r9, r1
     d20:	54 01       	movw	r10, r8
     d22:	83 94       	inc	r8
     d24:	45 28       	or	r4, r5
     d26:	46 28       	or	r4, r6
     d28:	47 28       	or	r4, r7
     d2a:	19 f4       	brne	.+6      	; 0xd32 <_fpadd_parts+0x116>
     d2c:	81 2c       	mov	r8, r1
     d2e:	91 2c       	mov	r9, r1
     d30:	54 01       	movw	r10, r8
     d32:	49 80       	ldd	r4, Y+1	; 0x01
     d34:	5a 80       	ldd	r5, Y+2	; 0x02
     d36:	6b 80       	ldd	r6, Y+3	; 0x03
     d38:	7c 80       	ldd	r7, Y+4	; 0x04
     d3a:	84 28       	or	r8, r4
     d3c:	95 28       	or	r9, r5
     d3e:	a6 28       	or	r10, r6
     d40:	b7 28       	or	r11, r7
     d42:	46 c0       	rjmp	.+140    	; 0xdd0 <_fpadd_parts+0x1b4>
     d44:	ef 2b       	or	r30, r31
     d46:	09 f4       	brne	.+2      	; 0xd4a <_fpadd_parts+0x12e>
     d48:	43 c0       	rjmp	.+134    	; 0xdd0 <_fpadd_parts+0x1b4>
     d4a:	84 0f       	add	r24, r20
     d4c:	95 1f       	adc	r25, r21
     d4e:	28 01       	movw	r4, r16
     d50:	39 01       	movw	r6, r18
     d52:	04 2e       	mov	r0, r20
     d54:	04 c0       	rjmp	.+8      	; 0xd5e <_fpadd_parts+0x142>
     d56:	76 94       	lsr	r7
     d58:	67 94       	ror	r6
     d5a:	57 94       	ror	r5
     d5c:	47 94       	ror	r4
     d5e:	0a 94       	dec	r0
     d60:	d2 f7       	brpl	.-12     	; 0xd56 <_fpadd_parts+0x13a>
     d62:	49 82       	std	Y+1, r4	; 0x01
     d64:	5a 82       	std	Y+2, r5	; 0x02
     d66:	6b 82       	std	Y+3, r6	; 0x03
     d68:	7c 82       	std	Y+4, r7	; 0x04
     d6a:	41 2c       	mov	r4, r1
     d6c:	51 2c       	mov	r5, r1
     d6e:	32 01       	movw	r6, r4
     d70:	43 94       	inc	r4
     d72:	04 c0       	rjmp	.+8      	; 0xd7c <_fpadd_parts+0x160>
     d74:	44 0c       	add	r4, r4
     d76:	55 1c       	adc	r5, r5
     d78:	66 1c       	adc	r6, r6
     d7a:	77 1c       	adc	r7, r7
     d7c:	4a 95       	dec	r20
     d7e:	d2 f7       	brpl	.-12     	; 0xd74 <_fpadd_parts+0x158>
     d80:	41 e0       	ldi	r20, 0x01	; 1
     d82:	44 1a       	sub	r4, r20
     d84:	51 08       	sbc	r5, r1
     d86:	61 08       	sbc	r6, r1
     d88:	71 08       	sbc	r7, r1
     d8a:	40 22       	and	r4, r16
     d8c:	51 22       	and	r5, r17
     d8e:	62 22       	and	r6, r18
     d90:	73 22       	and	r7, r19
     d92:	01 e0       	ldi	r16, 0x01	; 1
     d94:	10 e0       	ldi	r17, 0x00	; 0
     d96:	20 e0       	ldi	r18, 0x00	; 0
     d98:	30 e0       	ldi	r19, 0x00	; 0
     d9a:	45 28       	or	r4, r5
     d9c:	46 28       	or	r4, r6
     d9e:	47 28       	or	r4, r7
     da0:	19 f4       	brne	.+6      	; 0xda8 <_fpadd_parts+0x18c>
     da2:	00 e0       	ldi	r16, 0x00	; 0
     da4:	10 e0       	ldi	r17, 0x00	; 0
     da6:	98 01       	movw	r18, r16
     da8:	49 80       	ldd	r4, Y+1	; 0x01
     daa:	5a 80       	ldd	r5, Y+2	; 0x02
     dac:	6b 80       	ldd	r6, Y+3	; 0x03
     dae:	7c 80       	ldd	r7, Y+4	; 0x04
     db0:	04 29       	or	r16, r4
     db2:	15 29       	or	r17, r5
     db4:	26 29       	or	r18, r6
     db6:	37 29       	or	r19, r7
     db8:	0b c0       	rjmp	.+22     	; 0xdd0 <_fpadd_parts+0x1b4>
     dba:	a8 17       	cp	r26, r24
     dbc:	b9 07       	cpc	r27, r25
     dbe:	24 f4       	brge	.+8      	; 0xdc8 <_fpadd_parts+0x1ac>
     dc0:	81 2c       	mov	r8, r1
     dc2:	91 2c       	mov	r9, r1
     dc4:	54 01       	movw	r10, r8
     dc6:	04 c0       	rjmp	.+8      	; 0xdd0 <_fpadd_parts+0x1b4>
     dc8:	cd 01       	movw	r24, r26
     dca:	00 e0       	ldi	r16, 0x00	; 0
     dcc:	10 e0       	ldi	r17, 0x00	; 0
     dce:	98 01       	movw	r18, r16
     dd0:	f7 01       	movw	r30, r14
     dd2:	41 81       	ldd	r20, Z+1	; 0x01
     dd4:	fb 01       	movw	r30, r22
     dd6:	51 81       	ldd	r21, Z+1	; 0x01
     dd8:	45 17       	cp	r20, r21
     dda:	09 f4       	brne	.+2      	; 0xdde <_fpadd_parts+0x1c2>
     ddc:	46 c0       	rjmp	.+140    	; 0xe6a <_fpadd_parts+0x24e>
     dde:	44 23       	and	r20, r20
     de0:	49 f0       	breq	.+18     	; 0xdf4 <_fpadd_parts+0x1d8>
     de2:	24 01       	movw	r4, r8
     de4:	35 01       	movw	r6, r10
     de6:	40 1a       	sub	r4, r16
     de8:	51 0a       	sbc	r5, r17
     dea:	62 0a       	sbc	r6, r18
     dec:	73 0a       	sbc	r7, r19
     dee:	93 01       	movw	r18, r6
     df0:	82 01       	movw	r16, r4
     df2:	04 c0       	rjmp	.+8      	; 0xdfc <_fpadd_parts+0x1e0>
     df4:	08 19       	sub	r16, r8
     df6:	19 09       	sbc	r17, r9
     df8:	2a 09       	sbc	r18, r10
     dfa:	3b 09       	sbc	r19, r11
     dfc:	37 fd       	sbrc	r19, 7
     dfe:	05 c0       	rjmp	.+10     	; 0xe0a <_fpadd_parts+0x1ee>
     e00:	f6 01       	movw	r30, r12
     e02:	11 82       	std	Z+1, r1	; 0x01
     e04:	93 83       	std	Z+3, r25	; 0x03
     e06:	82 83       	std	Z+2, r24	; 0x02
     e08:	0c c0       	rjmp	.+24     	; 0xe22 <_fpadd_parts+0x206>
     e0a:	41 e0       	ldi	r20, 0x01	; 1
     e0c:	f6 01       	movw	r30, r12
     e0e:	41 83       	std	Z+1, r20	; 0x01
     e10:	93 83       	std	Z+3, r25	; 0x03
     e12:	82 83       	std	Z+2, r24	; 0x02
     e14:	30 95       	com	r19
     e16:	20 95       	com	r18
     e18:	10 95       	com	r17
     e1a:	01 95       	neg	r16
     e1c:	1f 4f       	sbci	r17, 0xFF	; 255
     e1e:	2f 4f       	sbci	r18, 0xFF	; 255
     e20:	3f 4f       	sbci	r19, 0xFF	; 255
     e22:	04 83       	std	Z+4, r16	; 0x04
     e24:	15 83       	std	Z+5, r17	; 0x05
     e26:	26 83       	std	Z+6, r18	; 0x06
     e28:	37 83       	std	Z+7, r19	; 0x07
     e2a:	0e c0       	rjmp	.+28     	; 0xe48 <_fpadd_parts+0x22c>
     e2c:	88 0f       	add	r24, r24
     e2e:	99 1f       	adc	r25, r25
     e30:	aa 1f       	adc	r26, r26
     e32:	bb 1f       	adc	r27, r27
     e34:	f6 01       	movw	r30, r12
     e36:	84 83       	std	Z+4, r24	; 0x04
     e38:	95 83       	std	Z+5, r25	; 0x05
     e3a:	a6 83       	std	Z+6, r26	; 0x06
     e3c:	b7 83       	std	Z+7, r27	; 0x07
     e3e:	82 81       	ldd	r24, Z+2	; 0x02
     e40:	93 81       	ldd	r25, Z+3	; 0x03
     e42:	01 97       	sbiw	r24, 0x01	; 1
     e44:	93 83       	std	Z+3, r25	; 0x03
     e46:	82 83       	std	Z+2, r24	; 0x02
     e48:	f6 01       	movw	r30, r12
     e4a:	84 81       	ldd	r24, Z+4	; 0x04
     e4c:	95 81       	ldd	r25, Z+5	; 0x05
     e4e:	a6 81       	ldd	r26, Z+6	; 0x06
     e50:	b7 81       	ldd	r27, Z+7	; 0x07
     e52:	ac 01       	movw	r20, r24
     e54:	bd 01       	movw	r22, r26
     e56:	41 50       	subi	r20, 0x01	; 1
     e58:	51 09       	sbc	r21, r1
     e5a:	61 09       	sbc	r22, r1
     e5c:	71 09       	sbc	r23, r1
     e5e:	4f 3f       	cpi	r20, 0xFF	; 255
     e60:	5f 4f       	sbci	r21, 0xFF	; 255
     e62:	6f 4f       	sbci	r22, 0xFF	; 255
     e64:	7f 43       	sbci	r23, 0x3F	; 63
     e66:	10 f3       	brcs	.-60     	; 0xe2c <_fpadd_parts+0x210>
     e68:	0c c0       	rjmp	.+24     	; 0xe82 <_fpadd_parts+0x266>
     e6a:	f6 01       	movw	r30, r12
     e6c:	41 83       	std	Z+1, r20	; 0x01
     e6e:	93 83       	std	Z+3, r25	; 0x03
     e70:	82 83       	std	Z+2, r24	; 0x02
     e72:	08 0d       	add	r16, r8
     e74:	19 1d       	adc	r17, r9
     e76:	2a 1d       	adc	r18, r10
     e78:	3b 1d       	adc	r19, r11
     e7a:	04 83       	std	Z+4, r16	; 0x04
     e7c:	15 83       	std	Z+5, r17	; 0x05
     e7e:	26 83       	std	Z+6, r18	; 0x06
     e80:	37 83       	std	Z+7, r19	; 0x07
     e82:	83 e0       	ldi	r24, 0x03	; 3
     e84:	f6 01       	movw	r30, r12
     e86:	80 83       	st	Z, r24
     e88:	44 81       	ldd	r20, Z+4	; 0x04
     e8a:	55 81       	ldd	r21, Z+5	; 0x05
     e8c:	66 81       	ldd	r22, Z+6	; 0x06
     e8e:	77 81       	ldd	r23, Z+7	; 0x07
     e90:	77 ff       	sbrs	r23, 7
     e92:	1a c0       	rjmp	.+52     	; 0xec8 <_fpadd_parts+0x2ac>
     e94:	db 01       	movw	r26, r22
     e96:	ca 01       	movw	r24, r20
     e98:	81 70       	andi	r24, 0x01	; 1
     e9a:	99 27       	eor	r25, r25
     e9c:	aa 27       	eor	r26, r26
     e9e:	bb 27       	eor	r27, r27
     ea0:	76 95       	lsr	r23
     ea2:	67 95       	ror	r22
     ea4:	57 95       	ror	r21
     ea6:	47 95       	ror	r20
     ea8:	84 2b       	or	r24, r20
     eaa:	95 2b       	or	r25, r21
     eac:	a6 2b       	or	r26, r22
     eae:	b7 2b       	or	r27, r23
     eb0:	84 83       	std	Z+4, r24	; 0x04
     eb2:	95 83       	std	Z+5, r25	; 0x05
     eb4:	a6 83       	std	Z+6, r26	; 0x06
     eb6:	b7 83       	std	Z+7, r27	; 0x07
     eb8:	82 81       	ldd	r24, Z+2	; 0x02
     eba:	93 81       	ldd	r25, Z+3	; 0x03
     ebc:	01 96       	adiw	r24, 0x01	; 1
     ebe:	93 83       	std	Z+3, r25	; 0x03
     ec0:	82 83       	std	Z+2, r24	; 0x02
     ec2:	02 c0       	rjmp	.+4      	; 0xec8 <_fpadd_parts+0x2ac>
     ec4:	7b 01       	movw	r14, r22
     ec6:	01 c0       	rjmp	.+2      	; 0xeca <_fpadd_parts+0x2ae>
     ec8:	76 01       	movw	r14, r12
     eca:	c7 01       	movw	r24, r14
     ecc:	24 96       	adiw	r28, 0x04	; 4
     ece:	e0 e1       	ldi	r30, 0x10	; 16
     ed0:	0c 94 3f 0b 	jmp	0x167e	; 0x167e <__epilogue_restores__+0x4>

00000ed4 <__addsf3>:
     ed4:	a0 e2       	ldi	r26, 0x20	; 32
     ed6:	b0 e0       	ldi	r27, 0x00	; 0
     ed8:	e0 e7       	ldi	r30, 0x70	; 112
     eda:	f7 e0       	ldi	r31, 0x07	; 7
     edc:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__prologue_saves__+0x20>
     ee0:	6d 8f       	std	Y+29, r22	; 0x1d
     ee2:	7e 8f       	std	Y+30, r23	; 0x1e
     ee4:	8f 8f       	std	Y+31, r24	; 0x1f
     ee6:	98 a3       	std	Y+32, r25	; 0x20
     ee8:	29 8f       	std	Y+25, r18	; 0x19
     eea:	3a 8f       	std	Y+26, r19	; 0x1a
     eec:	4b 8f       	std	Y+27, r20	; 0x1b
     eee:	5c 8f       	std	Y+28, r21	; 0x1c
     ef0:	be 01       	movw	r22, r28
     ef2:	6f 5e       	subi	r22, 0xEF	; 239
     ef4:	7f 4f       	sbci	r23, 0xFF	; 255
     ef6:	ce 01       	movw	r24, r28
     ef8:	4d 96       	adiw	r24, 0x1d	; 29
     efa:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__unpack_f>
     efe:	be 01       	movw	r22, r28
     f00:	67 5f       	subi	r22, 0xF7	; 247
     f02:	7f 4f       	sbci	r23, 0xFF	; 255
     f04:	ce 01       	movw	r24, r28
     f06:	49 96       	adiw	r24, 0x19	; 25
     f08:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__unpack_f>
     f0c:	ae 01       	movw	r20, r28
     f0e:	4f 5f       	subi	r20, 0xFF	; 255
     f10:	5f 4f       	sbci	r21, 0xFF	; 255
     f12:	be 01       	movw	r22, r28
     f14:	67 5f       	subi	r22, 0xF7	; 247
     f16:	7f 4f       	sbci	r23, 0xFF	; 255
     f18:	ce 01       	movw	r24, r28
     f1a:	41 96       	adiw	r24, 0x11	; 17
     f1c:	0e 94 0e 06 	call	0xc1c	; 0xc1c <_fpadd_parts>
     f20:	0e 94 87 09 	call	0x130e	; 0x130e <__pack_f>
     f24:	a0 96       	adiw	r28, 0x20	; 32
     f26:	e2 e0       	ldi	r30, 0x02	; 2
     f28:	0c 94 4d 0b 	jmp	0x169a	; 0x169a <__epilogue_restores__+0x20>

00000f2c <__subsf3>:
     f2c:	a0 e2       	ldi	r26, 0x20	; 32
     f2e:	b0 e0       	ldi	r27, 0x00	; 0
     f30:	ec e9       	ldi	r30, 0x9C	; 156
     f32:	f7 e0       	ldi	r31, 0x07	; 7
     f34:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__prologue_saves__+0x20>
     f38:	6d 8f       	std	Y+29, r22	; 0x1d
     f3a:	7e 8f       	std	Y+30, r23	; 0x1e
     f3c:	8f 8f       	std	Y+31, r24	; 0x1f
     f3e:	98 a3       	std	Y+32, r25	; 0x20
     f40:	29 8f       	std	Y+25, r18	; 0x19
     f42:	3a 8f       	std	Y+26, r19	; 0x1a
     f44:	4b 8f       	std	Y+27, r20	; 0x1b
     f46:	5c 8f       	std	Y+28, r21	; 0x1c
     f48:	be 01       	movw	r22, r28
     f4a:	6f 5e       	subi	r22, 0xEF	; 239
     f4c:	7f 4f       	sbci	r23, 0xFF	; 255
     f4e:	ce 01       	movw	r24, r28
     f50:	4d 96       	adiw	r24, 0x1d	; 29
     f52:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__unpack_f>
     f56:	be 01       	movw	r22, r28
     f58:	67 5f       	subi	r22, 0xF7	; 247
     f5a:	7f 4f       	sbci	r23, 0xFF	; 255
     f5c:	ce 01       	movw	r24, r28
     f5e:	49 96       	adiw	r24, 0x19	; 25
     f60:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__unpack_f>
     f64:	8a 85       	ldd	r24, Y+10	; 0x0a
     f66:	91 e0       	ldi	r25, 0x01	; 1
     f68:	89 27       	eor	r24, r25
     f6a:	8a 87       	std	Y+10, r24	; 0x0a
     f6c:	ae 01       	movw	r20, r28
     f6e:	4f 5f       	subi	r20, 0xFF	; 255
     f70:	5f 4f       	sbci	r21, 0xFF	; 255
     f72:	be 01       	movw	r22, r28
     f74:	67 5f       	subi	r22, 0xF7	; 247
     f76:	7f 4f       	sbci	r23, 0xFF	; 255
     f78:	ce 01       	movw	r24, r28
     f7a:	41 96       	adiw	r24, 0x11	; 17
     f7c:	0e 94 0e 06 	call	0xc1c	; 0xc1c <_fpadd_parts>
     f80:	0e 94 87 09 	call	0x130e	; 0x130e <__pack_f>
     f84:	a0 96       	adiw	r28, 0x20	; 32
     f86:	e2 e0       	ldi	r30, 0x02	; 2
     f88:	0c 94 4d 0b 	jmp	0x169a	; 0x169a <__epilogue_restores__+0x20>

00000f8c <__mulsf3>:
     f8c:	a0 e2       	ldi	r26, 0x20	; 32
     f8e:	b0 e0       	ldi	r27, 0x00	; 0
     f90:	ec ec       	ldi	r30, 0xCC	; 204
     f92:	f7 e0       	ldi	r31, 0x07	; 7
     f94:	0c 94 23 0b 	jmp	0x1646	; 0x1646 <__prologue_saves__+0x4>
     f98:	6d 8f       	std	Y+29, r22	; 0x1d
     f9a:	7e 8f       	std	Y+30, r23	; 0x1e
     f9c:	8f 8f       	std	Y+31, r24	; 0x1f
     f9e:	98 a3       	std	Y+32, r25	; 0x20
     fa0:	29 8f       	std	Y+25, r18	; 0x19
     fa2:	3a 8f       	std	Y+26, r19	; 0x1a
     fa4:	4b 8f       	std	Y+27, r20	; 0x1b
     fa6:	5c 8f       	std	Y+28, r21	; 0x1c
     fa8:	be 01       	movw	r22, r28
     faa:	6f 5e       	subi	r22, 0xEF	; 239
     fac:	7f 4f       	sbci	r23, 0xFF	; 255
     fae:	ce 01       	movw	r24, r28
     fb0:	4d 96       	adiw	r24, 0x1d	; 29
     fb2:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__unpack_f>
     fb6:	be 01       	movw	r22, r28
     fb8:	67 5f       	subi	r22, 0xF7	; 247
     fba:	7f 4f       	sbci	r23, 0xFF	; 255
     fbc:	ce 01       	movw	r24, r28
     fbe:	49 96       	adiw	r24, 0x19	; 25
     fc0:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__unpack_f>
     fc4:	99 89       	ldd	r25, Y+17	; 0x11
     fc6:	92 30       	cpi	r25, 0x02	; 2
     fc8:	08 f4       	brcc	.+2      	; 0xfcc <__mulsf3+0x40>
     fca:	12 c0       	rjmp	.+36     	; 0xff0 <__mulsf3+0x64>
     fcc:	89 85       	ldd	r24, Y+9	; 0x09
     fce:	82 30       	cpi	r24, 0x02	; 2
     fd0:	08 f4       	brcc	.+2      	; 0xfd4 <__mulsf3+0x48>
     fd2:	1a c0       	rjmp	.+52     	; 0x1008 <__mulsf3+0x7c>
     fd4:	94 30       	cpi	r25, 0x04	; 4
     fd6:	21 f4       	brne	.+8      	; 0xfe0 <__mulsf3+0x54>
     fd8:	82 30       	cpi	r24, 0x02	; 2
     fda:	09 f4       	brne	.+2      	; 0xfde <__mulsf3+0x52>
     fdc:	b4 c0       	rjmp	.+360    	; 0x1146 <__mulsf3+0x1ba>
     fde:	08 c0       	rjmp	.+16     	; 0xff0 <__mulsf3+0x64>
     fe0:	84 30       	cpi	r24, 0x04	; 4
     fe2:	21 f4       	brne	.+8      	; 0xfec <__mulsf3+0x60>
     fe4:	92 30       	cpi	r25, 0x02	; 2
     fe6:	09 f4       	brne	.+2      	; 0xfea <__mulsf3+0x5e>
     fe8:	ae c0       	rjmp	.+348    	; 0x1146 <__mulsf3+0x1ba>
     fea:	0e c0       	rjmp	.+28     	; 0x1008 <__mulsf3+0x7c>
     fec:	92 30       	cpi	r25, 0x02	; 2
     fee:	51 f4       	brne	.+20     	; 0x1004 <__mulsf3+0x78>
     ff0:	81 e0       	ldi	r24, 0x01	; 1
     ff2:	2a 89       	ldd	r18, Y+18	; 0x12
     ff4:	9a 85       	ldd	r25, Y+10	; 0x0a
     ff6:	29 13       	cpse	r18, r25
     ff8:	01 c0       	rjmp	.+2      	; 0xffc <__mulsf3+0x70>
     ffa:	80 e0       	ldi	r24, 0x00	; 0
     ffc:	8a 8b       	std	Y+18, r24	; 0x12
     ffe:	ce 01       	movw	r24, r28
    1000:	41 96       	adiw	r24, 0x11	; 17
    1002:	a3 c0       	rjmp	.+326    	; 0x114a <__mulsf3+0x1be>
    1004:	82 30       	cpi	r24, 0x02	; 2
    1006:	51 f4       	brne	.+20     	; 0x101c <__mulsf3+0x90>
    1008:	81 e0       	ldi	r24, 0x01	; 1
    100a:	2a 89       	ldd	r18, Y+18	; 0x12
    100c:	9a 85       	ldd	r25, Y+10	; 0x0a
    100e:	29 13       	cpse	r18, r25
    1010:	01 c0       	rjmp	.+2      	; 0x1014 <__mulsf3+0x88>
    1012:	80 e0       	ldi	r24, 0x00	; 0
    1014:	8a 87       	std	Y+10, r24	; 0x0a
    1016:	ce 01       	movw	r24, r28
    1018:	09 96       	adiw	r24, 0x09	; 9
    101a:	97 c0       	rjmp	.+302    	; 0x114a <__mulsf3+0x1be>
    101c:	8d 88       	ldd	r8, Y+21	; 0x15
    101e:	9e 88       	ldd	r9, Y+22	; 0x16
    1020:	af 88       	ldd	r10, Y+23	; 0x17
    1022:	b8 8c       	ldd	r11, Y+24	; 0x18
    1024:	0d 85       	ldd	r16, Y+13	; 0x0d
    1026:	1e 85       	ldd	r17, Y+14	; 0x0e
    1028:	2f 85       	ldd	r18, Y+15	; 0x0f
    102a:	38 89       	ldd	r19, Y+16	; 0x10
    102c:	e0 e2       	ldi	r30, 0x20	; 32
    102e:	f0 e0       	ldi	r31, 0x00	; 0
    1030:	80 e0       	ldi	r24, 0x00	; 0
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	dc 01       	movw	r26, r24
    1036:	c1 2c       	mov	r12, r1
    1038:	d1 2c       	mov	r13, r1
    103a:	76 01       	movw	r14, r12
    103c:	40 e0       	ldi	r20, 0x00	; 0
    103e:	50 e0       	ldi	r21, 0x00	; 0
    1040:	ba 01       	movw	r22, r20
    1042:	80 fe       	sbrs	r8, 0
    1044:	18 c0       	rjmp	.+48     	; 0x1076 <__mulsf3+0xea>
    1046:	40 0f       	add	r20, r16
    1048:	51 1f       	adc	r21, r17
    104a:	62 1f       	adc	r22, r18
    104c:	73 1f       	adc	r23, r19
    104e:	8c 0d       	add	r24, r12
    1050:	9d 1d       	adc	r25, r13
    1052:	ae 1d       	adc	r26, r14
    1054:	bf 1d       	adc	r27, r15
    1056:	41 2c       	mov	r4, r1
    1058:	51 2c       	mov	r5, r1
    105a:	32 01       	movw	r6, r4
    105c:	43 94       	inc	r4
    105e:	40 17       	cp	r20, r16
    1060:	51 07       	cpc	r21, r17
    1062:	62 07       	cpc	r22, r18
    1064:	73 07       	cpc	r23, r19
    1066:	18 f0       	brcs	.+6      	; 0x106e <__mulsf3+0xe2>
    1068:	41 2c       	mov	r4, r1
    106a:	51 2c       	mov	r5, r1
    106c:	32 01       	movw	r6, r4
    106e:	84 0d       	add	r24, r4
    1070:	95 1d       	adc	r25, r5
    1072:	a6 1d       	adc	r26, r6
    1074:	b7 1d       	adc	r27, r7
    1076:	cc 0c       	add	r12, r12
    1078:	dd 1c       	adc	r13, r13
    107a:	ee 1c       	adc	r14, r14
    107c:	ff 1c       	adc	r15, r15
    107e:	37 ff       	sbrs	r19, 7
    1080:	02 c0       	rjmp	.+4      	; 0x1086 <__mulsf3+0xfa>
    1082:	68 94       	set
    1084:	c0 f8       	bld	r12, 0
    1086:	00 0f       	add	r16, r16
    1088:	11 1f       	adc	r17, r17
    108a:	22 1f       	adc	r18, r18
    108c:	33 1f       	adc	r19, r19
    108e:	b6 94       	lsr	r11
    1090:	a7 94       	ror	r10
    1092:	97 94       	ror	r9
    1094:	87 94       	ror	r8
    1096:	31 97       	sbiw	r30, 0x01	; 1
    1098:	a1 f6       	brne	.-88     	; 0x1042 <__mulsf3+0xb6>
    109a:	2b 89       	ldd	r18, Y+19	; 0x13
    109c:	3c 89       	ldd	r19, Y+20	; 0x14
    109e:	eb 85       	ldd	r30, Y+11	; 0x0b
    10a0:	fc 85       	ldd	r31, Y+12	; 0x0c
    10a2:	2e 0f       	add	r18, r30
    10a4:	3f 1f       	adc	r19, r31
    10a6:	2e 5f       	subi	r18, 0xFE	; 254
    10a8:	3f 4f       	sbci	r19, 0xFF	; 255
    10aa:	3c 83       	std	Y+4, r19	; 0x04
    10ac:	2b 83       	std	Y+3, r18	; 0x03
    10ae:	21 e0       	ldi	r18, 0x01	; 1
    10b0:	ea 89       	ldd	r30, Y+18	; 0x12
    10b2:	3a 85       	ldd	r19, Y+10	; 0x0a
    10b4:	e3 13       	cpse	r30, r19
    10b6:	01 c0       	rjmp	.+2      	; 0x10ba <__mulsf3+0x12e>
    10b8:	20 e0       	ldi	r18, 0x00	; 0
    10ba:	2a 83       	std	Y+2, r18	; 0x02
    10bc:	eb 81       	ldd	r30, Y+3	; 0x03
    10be:	fc 81       	ldd	r31, Y+4	; 0x04
    10c0:	0c c0       	rjmp	.+24     	; 0x10da <__mulsf3+0x14e>
    10c2:	80 ff       	sbrs	r24, 0
    10c4:	05 c0       	rjmp	.+10     	; 0x10d0 <__mulsf3+0x144>
    10c6:	76 95       	lsr	r23
    10c8:	67 95       	ror	r22
    10ca:	57 95       	ror	r21
    10cc:	47 95       	ror	r20
    10ce:	70 68       	ori	r23, 0x80	; 128
    10d0:	b6 95       	lsr	r27
    10d2:	a7 95       	ror	r26
    10d4:	97 95       	ror	r25
    10d6:	87 95       	ror	r24
    10d8:	31 96       	adiw	r30, 0x01	; 1
    10da:	b7 fd       	sbrc	r27, 7
    10dc:	f2 cf       	rjmp	.-28     	; 0x10c2 <__mulsf3+0x136>
    10de:	9f 01       	movw	r18, r30
    10e0:	0c c0       	rjmp	.+24     	; 0x10fa <__mulsf3+0x16e>
    10e2:	88 0f       	add	r24, r24
    10e4:	99 1f       	adc	r25, r25
    10e6:	aa 1f       	adc	r26, r26
    10e8:	bb 1f       	adc	r27, r27
    10ea:	77 fd       	sbrc	r23, 7
    10ec:	81 60       	ori	r24, 0x01	; 1
    10ee:	44 0f       	add	r20, r20
    10f0:	55 1f       	adc	r21, r21
    10f2:	66 1f       	adc	r22, r22
    10f4:	77 1f       	adc	r23, r23
    10f6:	21 50       	subi	r18, 0x01	; 1
    10f8:	31 09       	sbc	r19, r1
    10fa:	00 97       	sbiw	r24, 0x00	; 0
    10fc:	a1 05       	cpc	r26, r1
    10fe:	e0 e4       	ldi	r30, 0x40	; 64
    1100:	be 07       	cpc	r27, r30
    1102:	78 f3       	brcs	.-34     	; 0x10e2 <__mulsf3+0x156>
    1104:	2b 83       	std	Y+3, r18	; 0x03
    1106:	3c 83       	std	Y+4, r19	; 0x04
    1108:	8c 01       	movw	r16, r24
    110a:	9d 01       	movw	r18, r26
    110c:	0f 77       	andi	r16, 0x7F	; 127
    110e:	11 27       	eor	r17, r17
    1110:	22 27       	eor	r18, r18
    1112:	33 27       	eor	r19, r19
    1114:	00 34       	cpi	r16, 0x40	; 64
    1116:	11 05       	cpc	r17, r1
    1118:	21 05       	cpc	r18, r1
    111a:	31 05       	cpc	r19, r1
    111c:	59 f4       	brne	.+22     	; 0x1134 <__mulsf3+0x1a8>
    111e:	87 fd       	sbrc	r24, 7
    1120:	09 c0       	rjmp	.+18     	; 0x1134 <__mulsf3+0x1a8>
    1122:	45 2b       	or	r20, r21
    1124:	46 2b       	or	r20, r22
    1126:	47 2b       	or	r20, r23
    1128:	29 f0       	breq	.+10     	; 0x1134 <__mulsf3+0x1a8>
    112a:	80 5c       	subi	r24, 0xC0	; 192
    112c:	9f 4f       	sbci	r25, 0xFF	; 255
    112e:	af 4f       	sbci	r26, 0xFF	; 255
    1130:	bf 4f       	sbci	r27, 0xFF	; 255
    1132:	80 78       	andi	r24, 0x80	; 128
    1134:	8d 83       	std	Y+5, r24	; 0x05
    1136:	9e 83       	std	Y+6, r25	; 0x06
    1138:	af 83       	std	Y+7, r26	; 0x07
    113a:	b8 87       	std	Y+8, r27	; 0x08
    113c:	83 e0       	ldi	r24, 0x03	; 3
    113e:	89 83       	std	Y+1, r24	; 0x01
    1140:	ce 01       	movw	r24, r28
    1142:	01 96       	adiw	r24, 0x01	; 1
    1144:	02 c0       	rjmp	.+4      	; 0x114a <__mulsf3+0x1be>
    1146:	8d e0       	ldi	r24, 0x0D	; 13
    1148:	91 e0       	ldi	r25, 0x01	; 1
    114a:	0e 94 87 09 	call	0x130e	; 0x130e <__pack_f>
    114e:	a0 96       	adiw	r28, 0x20	; 32
    1150:	e0 e1       	ldi	r30, 0x10	; 16
    1152:	0c 94 3f 0b 	jmp	0x167e	; 0x167e <__epilogue_restores__+0x4>

00001156 <__gtsf2>:
    1156:	a8 e1       	ldi	r26, 0x18	; 24
    1158:	b0 e0       	ldi	r27, 0x00	; 0
    115a:	e1 eb       	ldi	r30, 0xB1	; 177
    115c:	f8 e0       	ldi	r31, 0x08	; 8
    115e:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__prologue_saves__+0x20>
    1162:	6d 8b       	std	Y+21, r22	; 0x15
    1164:	7e 8b       	std	Y+22, r23	; 0x16
    1166:	8f 8b       	std	Y+23, r24	; 0x17
    1168:	98 8f       	std	Y+24, r25	; 0x18
    116a:	29 8b       	std	Y+17, r18	; 0x11
    116c:	3a 8b       	std	Y+18, r19	; 0x12
    116e:	4b 8b       	std	Y+19, r20	; 0x13
    1170:	5c 8b       	std	Y+20, r21	; 0x14
    1172:	be 01       	movw	r22, r28
    1174:	67 5f       	subi	r22, 0xF7	; 247
    1176:	7f 4f       	sbci	r23, 0xFF	; 255
    1178:	ce 01       	movw	r24, r28
    117a:	45 96       	adiw	r24, 0x15	; 21
    117c:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__unpack_f>
    1180:	be 01       	movw	r22, r28
    1182:	6f 5f       	subi	r22, 0xFF	; 255
    1184:	7f 4f       	sbci	r23, 0xFF	; 255
    1186:	ce 01       	movw	r24, r28
    1188:	41 96       	adiw	r24, 0x11	; 17
    118a:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__unpack_f>
    118e:	89 85       	ldd	r24, Y+9	; 0x09
    1190:	82 30       	cpi	r24, 0x02	; 2
    1192:	58 f0       	brcs	.+22     	; 0x11aa <__gtsf2+0x54>
    1194:	89 81       	ldd	r24, Y+1	; 0x01
    1196:	82 30       	cpi	r24, 0x02	; 2
    1198:	40 f0       	brcs	.+16     	; 0x11aa <__gtsf2+0x54>
    119a:	be 01       	movw	r22, r28
    119c:	6f 5f       	subi	r22, 0xFF	; 255
    119e:	7f 4f       	sbci	r23, 0xFF	; 255
    11a0:	ce 01       	movw	r24, r28
    11a2:	09 96       	adiw	r24, 0x09	; 9
    11a4:	0e 94 c0 0a 	call	0x1580	; 0x1580 <__fpcmp_parts_f>
    11a8:	01 c0       	rjmp	.+2      	; 0x11ac <__gtsf2+0x56>
    11aa:	8f ef       	ldi	r24, 0xFF	; 255
    11ac:	68 96       	adiw	r28, 0x18	; 24
    11ae:	e2 e0       	ldi	r30, 0x02	; 2
    11b0:	0c 94 4d 0b 	jmp	0x169a	; 0x169a <__epilogue_restores__+0x20>

000011b4 <__gesf2>:
    11b4:	a8 e1       	ldi	r26, 0x18	; 24
    11b6:	b0 e0       	ldi	r27, 0x00	; 0
    11b8:	e0 ee       	ldi	r30, 0xE0	; 224
    11ba:	f8 e0       	ldi	r31, 0x08	; 8
    11bc:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__prologue_saves__+0x20>
    11c0:	6d 8b       	std	Y+21, r22	; 0x15
    11c2:	7e 8b       	std	Y+22, r23	; 0x16
    11c4:	8f 8b       	std	Y+23, r24	; 0x17
    11c6:	98 8f       	std	Y+24, r25	; 0x18
    11c8:	29 8b       	std	Y+17, r18	; 0x11
    11ca:	3a 8b       	std	Y+18, r19	; 0x12
    11cc:	4b 8b       	std	Y+19, r20	; 0x13
    11ce:	5c 8b       	std	Y+20, r21	; 0x14
    11d0:	be 01       	movw	r22, r28
    11d2:	67 5f       	subi	r22, 0xF7	; 247
    11d4:	7f 4f       	sbci	r23, 0xFF	; 255
    11d6:	ce 01       	movw	r24, r28
    11d8:	45 96       	adiw	r24, 0x15	; 21
    11da:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__unpack_f>
    11de:	be 01       	movw	r22, r28
    11e0:	6f 5f       	subi	r22, 0xFF	; 255
    11e2:	7f 4f       	sbci	r23, 0xFF	; 255
    11e4:	ce 01       	movw	r24, r28
    11e6:	41 96       	adiw	r24, 0x11	; 17
    11e8:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__unpack_f>
    11ec:	89 85       	ldd	r24, Y+9	; 0x09
    11ee:	82 30       	cpi	r24, 0x02	; 2
    11f0:	58 f0       	brcs	.+22     	; 0x1208 <__gesf2+0x54>
    11f2:	89 81       	ldd	r24, Y+1	; 0x01
    11f4:	82 30       	cpi	r24, 0x02	; 2
    11f6:	40 f0       	brcs	.+16     	; 0x1208 <__gesf2+0x54>
    11f8:	be 01       	movw	r22, r28
    11fa:	6f 5f       	subi	r22, 0xFF	; 255
    11fc:	7f 4f       	sbci	r23, 0xFF	; 255
    11fe:	ce 01       	movw	r24, r28
    1200:	09 96       	adiw	r24, 0x09	; 9
    1202:	0e 94 c0 0a 	call	0x1580	; 0x1580 <__fpcmp_parts_f>
    1206:	01 c0       	rjmp	.+2      	; 0x120a <__gesf2+0x56>
    1208:	8f ef       	ldi	r24, 0xFF	; 255
    120a:	68 96       	adiw	r28, 0x18	; 24
    120c:	e2 e0       	ldi	r30, 0x02	; 2
    120e:	0c 94 4d 0b 	jmp	0x169a	; 0x169a <__epilogue_restores__+0x20>

00001212 <__ltsf2>:
    1212:	a8 e1       	ldi	r26, 0x18	; 24
    1214:	b0 e0       	ldi	r27, 0x00	; 0
    1216:	ef e0       	ldi	r30, 0x0F	; 15
    1218:	f9 e0       	ldi	r31, 0x09	; 9
    121a:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__prologue_saves__+0x20>
    121e:	6d 8b       	std	Y+21, r22	; 0x15
    1220:	7e 8b       	std	Y+22, r23	; 0x16
    1222:	8f 8b       	std	Y+23, r24	; 0x17
    1224:	98 8f       	std	Y+24, r25	; 0x18
    1226:	29 8b       	std	Y+17, r18	; 0x11
    1228:	3a 8b       	std	Y+18, r19	; 0x12
    122a:	4b 8b       	std	Y+19, r20	; 0x13
    122c:	5c 8b       	std	Y+20, r21	; 0x14
    122e:	be 01       	movw	r22, r28
    1230:	67 5f       	subi	r22, 0xF7	; 247
    1232:	7f 4f       	sbci	r23, 0xFF	; 255
    1234:	ce 01       	movw	r24, r28
    1236:	45 96       	adiw	r24, 0x15	; 21
    1238:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__unpack_f>
    123c:	be 01       	movw	r22, r28
    123e:	6f 5f       	subi	r22, 0xFF	; 255
    1240:	7f 4f       	sbci	r23, 0xFF	; 255
    1242:	ce 01       	movw	r24, r28
    1244:	41 96       	adiw	r24, 0x11	; 17
    1246:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__unpack_f>
    124a:	89 85       	ldd	r24, Y+9	; 0x09
    124c:	82 30       	cpi	r24, 0x02	; 2
    124e:	58 f0       	brcs	.+22     	; 0x1266 <__ltsf2+0x54>
    1250:	89 81       	ldd	r24, Y+1	; 0x01
    1252:	82 30       	cpi	r24, 0x02	; 2
    1254:	40 f0       	brcs	.+16     	; 0x1266 <__ltsf2+0x54>
    1256:	be 01       	movw	r22, r28
    1258:	6f 5f       	subi	r22, 0xFF	; 255
    125a:	7f 4f       	sbci	r23, 0xFF	; 255
    125c:	ce 01       	movw	r24, r28
    125e:	09 96       	adiw	r24, 0x09	; 9
    1260:	0e 94 c0 0a 	call	0x1580	; 0x1580 <__fpcmp_parts_f>
    1264:	01 c0       	rjmp	.+2      	; 0x1268 <__ltsf2+0x56>
    1266:	81 e0       	ldi	r24, 0x01	; 1
    1268:	68 96       	adiw	r28, 0x18	; 24
    126a:	e2 e0       	ldi	r30, 0x02	; 2
    126c:	0c 94 4d 0b 	jmp	0x169a	; 0x169a <__epilogue_restores__+0x20>

00001270 <__fixsfsi>:
    1270:	ac e0       	ldi	r26, 0x0C	; 12
    1272:	b0 e0       	ldi	r27, 0x00	; 0
    1274:	ee e3       	ldi	r30, 0x3E	; 62
    1276:	f9 e0       	ldi	r31, 0x09	; 9
    1278:	0c 94 2f 0b 	jmp	0x165e	; 0x165e <__prologue_saves__+0x1c>
    127c:	69 87       	std	Y+9, r22	; 0x09
    127e:	7a 87       	std	Y+10, r23	; 0x0a
    1280:	8b 87       	std	Y+11, r24	; 0x0b
    1282:	9c 87       	std	Y+12, r25	; 0x0c
    1284:	be 01       	movw	r22, r28
    1286:	6f 5f       	subi	r22, 0xFF	; 255
    1288:	7f 4f       	sbci	r23, 0xFF	; 255
    128a:	ce 01       	movw	r24, r28
    128c:	09 96       	adiw	r24, 0x09	; 9
    128e:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__unpack_f>
    1292:	89 81       	ldd	r24, Y+1	; 0x01
    1294:	82 30       	cpi	r24, 0x02	; 2
    1296:	91 f1       	breq	.+100    	; 0x12fc <__fixsfsi+0x8c>
    1298:	82 30       	cpi	r24, 0x02	; 2
    129a:	80 f1       	brcs	.+96     	; 0x12fc <__fixsfsi+0x8c>
    129c:	84 30       	cpi	r24, 0x04	; 4
    129e:	41 f4       	brne	.+16     	; 0x12b0 <__fixsfsi+0x40>
    12a0:	8a 81       	ldd	r24, Y+2	; 0x02
    12a2:	88 23       	and	r24, r24
    12a4:	31 f1       	breq	.+76     	; 0x12f2 <__fixsfsi+0x82>
    12a6:	00 e0       	ldi	r16, 0x00	; 0
    12a8:	10 e0       	ldi	r17, 0x00	; 0
    12aa:	20 e0       	ldi	r18, 0x00	; 0
    12ac:	30 e8       	ldi	r19, 0x80	; 128
    12ae:	29 c0       	rjmp	.+82     	; 0x1302 <__fixsfsi+0x92>
    12b0:	2b 81       	ldd	r18, Y+3	; 0x03
    12b2:	3c 81       	ldd	r19, Y+4	; 0x04
    12b4:	37 fd       	sbrc	r19, 7
    12b6:	22 c0       	rjmp	.+68     	; 0x12fc <__fixsfsi+0x8c>
    12b8:	2f 31       	cpi	r18, 0x1F	; 31
    12ba:	31 05       	cpc	r19, r1
    12bc:	8c f7       	brge	.-30     	; 0x12a0 <__fixsfsi+0x30>
    12be:	8e e1       	ldi	r24, 0x1E	; 30
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	82 1b       	sub	r24, r18
    12c4:	93 0b       	sbc	r25, r19
    12c6:	0d 81       	ldd	r16, Y+5	; 0x05
    12c8:	1e 81       	ldd	r17, Y+6	; 0x06
    12ca:	2f 81       	ldd	r18, Y+7	; 0x07
    12cc:	38 85       	ldd	r19, Y+8	; 0x08
    12ce:	04 c0       	rjmp	.+8      	; 0x12d8 <__fixsfsi+0x68>
    12d0:	36 95       	lsr	r19
    12d2:	27 95       	ror	r18
    12d4:	17 95       	ror	r17
    12d6:	07 95       	ror	r16
    12d8:	8a 95       	dec	r24
    12da:	d2 f7       	brpl	.-12     	; 0x12d0 <__fixsfsi+0x60>
    12dc:	8a 81       	ldd	r24, Y+2	; 0x02
    12de:	88 23       	and	r24, r24
    12e0:	81 f0       	breq	.+32     	; 0x1302 <__fixsfsi+0x92>
    12e2:	30 95       	com	r19
    12e4:	20 95       	com	r18
    12e6:	10 95       	com	r17
    12e8:	01 95       	neg	r16
    12ea:	1f 4f       	sbci	r17, 0xFF	; 255
    12ec:	2f 4f       	sbci	r18, 0xFF	; 255
    12ee:	3f 4f       	sbci	r19, 0xFF	; 255
    12f0:	08 c0       	rjmp	.+16     	; 0x1302 <__fixsfsi+0x92>
    12f2:	0f ef       	ldi	r16, 0xFF	; 255
    12f4:	1f ef       	ldi	r17, 0xFF	; 255
    12f6:	2f ef       	ldi	r18, 0xFF	; 255
    12f8:	3f e7       	ldi	r19, 0x7F	; 127
    12fa:	03 c0       	rjmp	.+6      	; 0x1302 <__fixsfsi+0x92>
    12fc:	00 e0       	ldi	r16, 0x00	; 0
    12fe:	10 e0       	ldi	r17, 0x00	; 0
    1300:	98 01       	movw	r18, r16
    1302:	b8 01       	movw	r22, r16
    1304:	c9 01       	movw	r24, r18
    1306:	2c 96       	adiw	r28, 0x0c	; 12
    1308:	e4 e0       	ldi	r30, 0x04	; 4
    130a:	0c 94 4b 0b 	jmp	0x1696	; 0x1696 <__epilogue_restores__+0x1c>

0000130e <__pack_f>:
    130e:	0f 93       	push	r16
    1310:	1f 93       	push	r17
    1312:	cf 93       	push	r28
    1314:	df 93       	push	r29
    1316:	dc 01       	movw	r26, r24
    1318:	14 96       	adiw	r26, 0x04	; 4
    131a:	4d 91       	ld	r20, X+
    131c:	5d 91       	ld	r21, X+
    131e:	6d 91       	ld	r22, X+
    1320:	7c 91       	ld	r23, X
    1322:	17 97       	sbiw	r26, 0x07	; 7
    1324:	11 96       	adiw	r26, 0x01	; 1
    1326:	ec 91       	ld	r30, X
    1328:	11 97       	sbiw	r26, 0x01	; 1
    132a:	8c 91       	ld	r24, X
    132c:	82 30       	cpi	r24, 0x02	; 2
    132e:	20 f4       	brcc	.+8      	; 0x1338 <__pack_f+0x2a>
    1330:	60 61       	ori	r22, 0x10	; 16
    1332:	8f ef       	ldi	r24, 0xFF	; 255
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	a6 c0       	rjmp	.+332    	; 0x1484 <__pack_f+0x176>
    1338:	84 30       	cpi	r24, 0x04	; 4
    133a:	09 f4       	brne	.+2      	; 0x133e <__pack_f+0x30>
    133c:	9e c0       	rjmp	.+316    	; 0x147a <__pack_f+0x16c>
    133e:	82 30       	cpi	r24, 0x02	; 2
    1340:	09 f4       	brne	.+2      	; 0x1344 <__pack_f+0x36>
    1342:	95 c0       	rjmp	.+298    	; 0x146e <__pack_f+0x160>
    1344:	41 15       	cp	r20, r1
    1346:	51 05       	cpc	r21, r1
    1348:	61 05       	cpc	r22, r1
    134a:	71 05       	cpc	r23, r1
    134c:	09 f4       	brne	.+2      	; 0x1350 <__pack_f+0x42>
    134e:	92 c0       	rjmp	.+292    	; 0x1474 <__pack_f+0x166>
    1350:	12 96       	adiw	r26, 0x02	; 2
    1352:	2d 91       	ld	r18, X+
    1354:	3c 91       	ld	r19, X
    1356:	13 97       	sbiw	r26, 0x03	; 3
    1358:	22 38       	cpi	r18, 0x82	; 130
    135a:	8f ef       	ldi	r24, 0xFF	; 255
    135c:	38 07       	cpc	r19, r24
    135e:	0c f0       	brlt	.+2      	; 0x1362 <__pack_f+0x54>
    1360:	58 c0       	rjmp	.+176    	; 0x1412 <__pack_f+0x104>
    1362:	c2 e8       	ldi	r28, 0x82	; 130
    1364:	df ef       	ldi	r29, 0xFF	; 255
    1366:	c2 1b       	sub	r28, r18
    1368:	d3 0b       	sbc	r29, r19
    136a:	ca 31       	cpi	r28, 0x1A	; 26
    136c:	d1 05       	cpc	r29, r1
    136e:	6c f5       	brge	.+90     	; 0x13ca <__pack_f+0xbc>
    1370:	8a 01       	movw	r16, r20
    1372:	9b 01       	movw	r18, r22
    1374:	0c 2e       	mov	r0, r28
    1376:	04 c0       	rjmp	.+8      	; 0x1380 <__pack_f+0x72>
    1378:	36 95       	lsr	r19
    137a:	27 95       	ror	r18
    137c:	17 95       	ror	r17
    137e:	07 95       	ror	r16
    1380:	0a 94       	dec	r0
    1382:	d2 f7       	brpl	.-12     	; 0x1378 <__pack_f+0x6a>
    1384:	81 e0       	ldi	r24, 0x01	; 1
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	a0 e0       	ldi	r26, 0x00	; 0
    138a:	b0 e0       	ldi	r27, 0x00	; 0
    138c:	0c 2e       	mov	r0, r28
    138e:	04 c0       	rjmp	.+8      	; 0x1398 <__pack_f+0x8a>
    1390:	88 0f       	add	r24, r24
    1392:	99 1f       	adc	r25, r25
    1394:	aa 1f       	adc	r26, r26
    1396:	bb 1f       	adc	r27, r27
    1398:	0a 94       	dec	r0
    139a:	d2 f7       	brpl	.-12     	; 0x1390 <__pack_f+0x82>
    139c:	01 97       	sbiw	r24, 0x01	; 1
    139e:	a1 09       	sbc	r26, r1
    13a0:	b1 09       	sbc	r27, r1
    13a2:	84 23       	and	r24, r20
    13a4:	95 23       	and	r25, r21
    13a6:	a6 23       	and	r26, r22
    13a8:	b7 23       	and	r27, r23
    13aa:	41 e0       	ldi	r20, 0x01	; 1
    13ac:	50 e0       	ldi	r21, 0x00	; 0
    13ae:	60 e0       	ldi	r22, 0x00	; 0
    13b0:	70 e0       	ldi	r23, 0x00	; 0
    13b2:	89 2b       	or	r24, r25
    13b4:	8a 2b       	or	r24, r26
    13b6:	8b 2b       	or	r24, r27
    13b8:	19 f4       	brne	.+6      	; 0x13c0 <__pack_f+0xb2>
    13ba:	40 e0       	ldi	r20, 0x00	; 0
    13bc:	50 e0       	ldi	r21, 0x00	; 0
    13be:	ba 01       	movw	r22, r20
    13c0:	40 2b       	or	r20, r16
    13c2:	51 2b       	or	r21, r17
    13c4:	62 2b       	or	r22, r18
    13c6:	73 2b       	or	r23, r19
    13c8:	03 c0       	rjmp	.+6      	; 0x13d0 <__pack_f+0xc2>
    13ca:	40 e0       	ldi	r20, 0x00	; 0
    13cc:	50 e0       	ldi	r21, 0x00	; 0
    13ce:	ba 01       	movw	r22, r20
    13d0:	db 01       	movw	r26, r22
    13d2:	ca 01       	movw	r24, r20
    13d4:	8f 77       	andi	r24, 0x7F	; 127
    13d6:	99 27       	eor	r25, r25
    13d8:	aa 27       	eor	r26, r26
    13da:	bb 27       	eor	r27, r27
    13dc:	80 34       	cpi	r24, 0x40	; 64
    13de:	91 05       	cpc	r25, r1
    13e0:	a1 05       	cpc	r26, r1
    13e2:	b1 05       	cpc	r27, r1
    13e4:	39 f4       	brne	.+14     	; 0x13f4 <__pack_f+0xe6>
    13e6:	47 ff       	sbrs	r20, 7
    13e8:	09 c0       	rjmp	.+18     	; 0x13fc <__pack_f+0xee>
    13ea:	40 5c       	subi	r20, 0xC0	; 192
    13ec:	5f 4f       	sbci	r21, 0xFF	; 255
    13ee:	6f 4f       	sbci	r22, 0xFF	; 255
    13f0:	7f 4f       	sbci	r23, 0xFF	; 255
    13f2:	04 c0       	rjmp	.+8      	; 0x13fc <__pack_f+0xee>
    13f4:	41 5c       	subi	r20, 0xC1	; 193
    13f6:	5f 4f       	sbci	r21, 0xFF	; 255
    13f8:	6f 4f       	sbci	r22, 0xFF	; 255
    13fa:	7f 4f       	sbci	r23, 0xFF	; 255
    13fc:	81 e0       	ldi	r24, 0x01	; 1
    13fe:	90 e0       	ldi	r25, 0x00	; 0
    1400:	41 15       	cp	r20, r1
    1402:	51 05       	cpc	r21, r1
    1404:	61 05       	cpc	r22, r1
    1406:	20 e4       	ldi	r18, 0x40	; 64
    1408:	72 07       	cpc	r23, r18
    140a:	48 f5       	brcc	.+82     	; 0x145e <__pack_f+0x150>
    140c:	80 e0       	ldi	r24, 0x00	; 0
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	26 c0       	rjmp	.+76     	; 0x145e <__pack_f+0x150>
    1412:	20 38       	cpi	r18, 0x80	; 128
    1414:	31 05       	cpc	r19, r1
    1416:	8c f5       	brge	.+98     	; 0x147a <__pack_f+0x16c>
    1418:	db 01       	movw	r26, r22
    141a:	ca 01       	movw	r24, r20
    141c:	8f 77       	andi	r24, 0x7F	; 127
    141e:	99 27       	eor	r25, r25
    1420:	aa 27       	eor	r26, r26
    1422:	bb 27       	eor	r27, r27
    1424:	80 34       	cpi	r24, 0x40	; 64
    1426:	91 05       	cpc	r25, r1
    1428:	a1 05       	cpc	r26, r1
    142a:	b1 05       	cpc	r27, r1
    142c:	39 f4       	brne	.+14     	; 0x143c <__pack_f+0x12e>
    142e:	47 ff       	sbrs	r20, 7
    1430:	09 c0       	rjmp	.+18     	; 0x1444 <__pack_f+0x136>
    1432:	40 5c       	subi	r20, 0xC0	; 192
    1434:	5f 4f       	sbci	r21, 0xFF	; 255
    1436:	6f 4f       	sbci	r22, 0xFF	; 255
    1438:	7f 4f       	sbci	r23, 0xFF	; 255
    143a:	04 c0       	rjmp	.+8      	; 0x1444 <__pack_f+0x136>
    143c:	41 5c       	subi	r20, 0xC1	; 193
    143e:	5f 4f       	sbci	r21, 0xFF	; 255
    1440:	6f 4f       	sbci	r22, 0xFF	; 255
    1442:	7f 4f       	sbci	r23, 0xFF	; 255
    1444:	77 fd       	sbrc	r23, 7
    1446:	04 c0       	rjmp	.+8      	; 0x1450 <__pack_f+0x142>
    1448:	c9 01       	movw	r24, r18
    144a:	81 58       	subi	r24, 0x81	; 129
    144c:	9f 4f       	sbci	r25, 0xFF	; 255
    144e:	07 c0       	rjmp	.+14     	; 0x145e <__pack_f+0x150>
    1450:	76 95       	lsr	r23
    1452:	67 95       	ror	r22
    1454:	57 95       	ror	r21
    1456:	47 95       	ror	r20
    1458:	c9 01       	movw	r24, r18
    145a:	80 58       	subi	r24, 0x80	; 128
    145c:	9f 4f       	sbci	r25, 0xFF	; 255
    145e:	97 e0       	ldi	r25, 0x07	; 7
    1460:	76 95       	lsr	r23
    1462:	67 95       	ror	r22
    1464:	57 95       	ror	r21
    1466:	47 95       	ror	r20
    1468:	9a 95       	dec	r25
    146a:	d1 f7       	brne	.-12     	; 0x1460 <__pack_f+0x152>
    146c:	0b c0       	rjmp	.+22     	; 0x1484 <__pack_f+0x176>
    146e:	80 e0       	ldi	r24, 0x00	; 0
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	05 c0       	rjmp	.+10     	; 0x147e <__pack_f+0x170>
    1474:	80 e0       	ldi	r24, 0x00	; 0
    1476:	90 e0       	ldi	r25, 0x00	; 0
    1478:	05 c0       	rjmp	.+10     	; 0x1484 <__pack_f+0x176>
    147a:	8f ef       	ldi	r24, 0xFF	; 255
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	40 e0       	ldi	r20, 0x00	; 0
    1480:	50 e0       	ldi	r21, 0x00	; 0
    1482:	ba 01       	movw	r22, r20
    1484:	98 2f       	mov	r25, r24
    1486:	96 95       	lsr	r25
    1488:	e0 fb       	bst	r30, 0
    148a:	97 f9       	bld	r25, 7
    148c:	36 2f       	mov	r19, r22
    148e:	80 fb       	bst	r24, 0
    1490:	37 f9       	bld	r19, 7
    1492:	64 2f       	mov	r22, r20
    1494:	75 2f       	mov	r23, r21
    1496:	83 2f       	mov	r24, r19
    1498:	df 91       	pop	r29
    149a:	cf 91       	pop	r28
    149c:	1f 91       	pop	r17
    149e:	0f 91       	pop	r16
    14a0:	08 95       	ret

000014a2 <__unpack_f>:
    14a2:	cf 92       	push	r12
    14a4:	df 92       	push	r13
    14a6:	ef 92       	push	r14
    14a8:	dc 01       	movw	r26, r24
    14aa:	fb 01       	movw	r30, r22
    14ac:	cc 90       	ld	r12, X
    14ae:	11 96       	adiw	r26, 0x01	; 1
    14b0:	dc 90       	ld	r13, X
    14b2:	11 97       	sbiw	r26, 0x01	; 1
    14b4:	12 96       	adiw	r26, 0x02	; 2
    14b6:	8c 91       	ld	r24, X
    14b8:	12 97       	sbiw	r26, 0x02	; 2
    14ba:	3f e7       	ldi	r19, 0x7F	; 127
    14bc:	e3 2e       	mov	r14, r19
    14be:	e8 22       	and	r14, r24
    14c0:	6e 2d       	mov	r22, r14
    14c2:	a6 01       	movw	r20, r12
    14c4:	70 e0       	ldi	r23, 0x00	; 0
    14c6:	98 2f       	mov	r25, r24
    14c8:	99 1f       	adc	r25, r25
    14ca:	99 27       	eor	r25, r25
    14cc:	99 1f       	adc	r25, r25
    14ce:	13 96       	adiw	r26, 0x03	; 3
    14d0:	2c 91       	ld	r18, X
    14d2:	82 2f       	mov	r24, r18
    14d4:	88 0f       	add	r24, r24
    14d6:	89 2b       	or	r24, r25
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	27 fb       	bst	r18, 7
    14dc:	22 27       	eor	r18, r18
    14de:	20 f9       	bld	r18, 0
    14e0:	21 83       	std	Z+1, r18	; 0x01
    14e2:	00 97       	sbiw	r24, 0x00	; 0
    14e4:	29 f5       	brne	.+74     	; 0x1530 <__unpack_f+0x8e>
    14e6:	41 15       	cp	r20, r1
    14e8:	51 05       	cpc	r21, r1
    14ea:	61 05       	cpc	r22, r1
    14ec:	71 05       	cpc	r23, r1
    14ee:	11 f4       	brne	.+4      	; 0x14f4 <__unpack_f+0x52>
    14f0:	82 e0       	ldi	r24, 0x02	; 2
    14f2:	27 c0       	rjmp	.+78     	; 0x1542 <__unpack_f+0xa0>
    14f4:	82 e8       	ldi	r24, 0x82	; 130
    14f6:	9f ef       	ldi	r25, 0xFF	; 255
    14f8:	93 83       	std	Z+3, r25	; 0x03
    14fa:	82 83       	std	Z+2, r24	; 0x02
    14fc:	27 e0       	ldi	r18, 0x07	; 7
    14fe:	44 0f       	add	r20, r20
    1500:	55 1f       	adc	r21, r21
    1502:	66 1f       	adc	r22, r22
    1504:	77 1f       	adc	r23, r23
    1506:	2a 95       	dec	r18
    1508:	d1 f7       	brne	.-12     	; 0x14fe <__unpack_f+0x5c>
    150a:	83 e0       	ldi	r24, 0x03	; 3
    150c:	80 83       	st	Z, r24
    150e:	09 c0       	rjmp	.+18     	; 0x1522 <__unpack_f+0x80>
    1510:	44 0f       	add	r20, r20
    1512:	55 1f       	adc	r21, r21
    1514:	66 1f       	adc	r22, r22
    1516:	77 1f       	adc	r23, r23
    1518:	82 81       	ldd	r24, Z+2	; 0x02
    151a:	93 81       	ldd	r25, Z+3	; 0x03
    151c:	01 97       	sbiw	r24, 0x01	; 1
    151e:	93 83       	std	Z+3, r25	; 0x03
    1520:	82 83       	std	Z+2, r24	; 0x02
    1522:	41 15       	cp	r20, r1
    1524:	51 05       	cpc	r21, r1
    1526:	61 05       	cpc	r22, r1
    1528:	80 e4       	ldi	r24, 0x40	; 64
    152a:	78 07       	cpc	r23, r24
    152c:	88 f3       	brcs	.-30     	; 0x1510 <__unpack_f+0x6e>
    152e:	20 c0       	rjmp	.+64     	; 0x1570 <__unpack_f+0xce>
    1530:	8f 3f       	cpi	r24, 0xFF	; 255
    1532:	91 05       	cpc	r25, r1
    1534:	79 f4       	brne	.+30     	; 0x1554 <__unpack_f+0xb2>
    1536:	41 15       	cp	r20, r1
    1538:	51 05       	cpc	r21, r1
    153a:	61 05       	cpc	r22, r1
    153c:	71 05       	cpc	r23, r1
    153e:	19 f4       	brne	.+6      	; 0x1546 <__unpack_f+0xa4>
    1540:	84 e0       	ldi	r24, 0x04	; 4
    1542:	80 83       	st	Z, r24
    1544:	19 c0       	rjmp	.+50     	; 0x1578 <__unpack_f+0xd6>
    1546:	e4 fe       	sbrs	r14, 4
    1548:	03 c0       	rjmp	.+6      	; 0x1550 <__unpack_f+0xae>
    154a:	81 e0       	ldi	r24, 0x01	; 1
    154c:	80 83       	st	Z, r24
    154e:	10 c0       	rjmp	.+32     	; 0x1570 <__unpack_f+0xce>
    1550:	10 82       	st	Z, r1
    1552:	0e c0       	rjmp	.+28     	; 0x1570 <__unpack_f+0xce>
    1554:	8f 57       	subi	r24, 0x7F	; 127
    1556:	91 09       	sbc	r25, r1
    1558:	93 83       	std	Z+3, r25	; 0x03
    155a:	82 83       	std	Z+2, r24	; 0x02
    155c:	83 e0       	ldi	r24, 0x03	; 3
    155e:	80 83       	st	Z, r24
    1560:	87 e0       	ldi	r24, 0x07	; 7
    1562:	44 0f       	add	r20, r20
    1564:	55 1f       	adc	r21, r21
    1566:	66 1f       	adc	r22, r22
    1568:	77 1f       	adc	r23, r23
    156a:	8a 95       	dec	r24
    156c:	d1 f7       	brne	.-12     	; 0x1562 <__unpack_f+0xc0>
    156e:	70 64       	ori	r23, 0x40	; 64
    1570:	44 83       	std	Z+4, r20	; 0x04
    1572:	55 83       	std	Z+5, r21	; 0x05
    1574:	66 83       	std	Z+6, r22	; 0x06
    1576:	77 83       	std	Z+7, r23	; 0x07
    1578:	ef 90       	pop	r14
    157a:	df 90       	pop	r13
    157c:	cf 90       	pop	r12
    157e:	08 95       	ret

00001580 <__fpcmp_parts_f>:
    1580:	cf 93       	push	r28
    1582:	fc 01       	movw	r30, r24
    1584:	db 01       	movw	r26, r22
    1586:	90 81       	ld	r25, Z
    1588:	92 30       	cpi	r25, 0x02	; 2
    158a:	08 f4       	brcc	.+2      	; 0x158e <__fpcmp_parts_f+0xe>
    158c:	52 c0       	rjmp	.+164    	; 0x1632 <__fpcmp_parts_f+0xb2>
    158e:	8c 91       	ld	r24, X
    1590:	82 30       	cpi	r24, 0x02	; 2
    1592:	08 f4       	brcc	.+2      	; 0x1596 <__fpcmp_parts_f+0x16>
    1594:	4e c0       	rjmp	.+156    	; 0x1632 <__fpcmp_parts_f+0xb2>
    1596:	94 30       	cpi	r25, 0x04	; 4
    1598:	71 f4       	brne	.+28     	; 0x15b6 <__fpcmp_parts_f+0x36>
    159a:	84 30       	cpi	r24, 0x04	; 4
    159c:	39 f4       	brne	.+14     	; 0x15ac <__fpcmp_parts_f+0x2c>
    159e:	11 96       	adiw	r26, 0x01	; 1
    15a0:	2c 91       	ld	r18, X
    15a2:	30 e0       	ldi	r19, 0x00	; 0
    15a4:	81 81       	ldd	r24, Z+1	; 0x01
    15a6:	28 1b       	sub	r18, r24
    15a8:	31 09       	sbc	r19, r1
    15aa:	48 c0       	rjmp	.+144    	; 0x163c <__fpcmp_parts_f+0xbc>
    15ac:	81 81       	ldd	r24, Z+1	; 0x01
    15ae:	88 23       	and	r24, r24
    15b0:	09 f4       	brne	.+2      	; 0x15b4 <__fpcmp_parts_f+0x34>
    15b2:	3f c0       	rjmp	.+126    	; 0x1632 <__fpcmp_parts_f+0xb2>
    15b4:	3b c0       	rjmp	.+118    	; 0x162c <__fpcmp_parts_f+0xac>
    15b6:	84 30       	cpi	r24, 0x04	; 4
    15b8:	29 f4       	brne	.+10     	; 0x15c4 <__fpcmp_parts_f+0x44>
    15ba:	11 96       	adiw	r26, 0x01	; 1
    15bc:	8c 91       	ld	r24, X
    15be:	81 11       	cpse	r24, r1
    15c0:	38 c0       	rjmp	.+112    	; 0x1632 <__fpcmp_parts_f+0xb2>
    15c2:	34 c0       	rjmp	.+104    	; 0x162c <__fpcmp_parts_f+0xac>
    15c4:	92 30       	cpi	r25, 0x02	; 2
    15c6:	19 f4       	brne	.+6      	; 0x15ce <__fpcmp_parts_f+0x4e>
    15c8:	82 30       	cpi	r24, 0x02	; 2
    15ca:	b9 f7       	brne	.-18     	; 0x15ba <__fpcmp_parts_f+0x3a>
    15cc:	35 c0       	rjmp	.+106    	; 0x1638 <__fpcmp_parts_f+0xb8>
    15ce:	82 30       	cpi	r24, 0x02	; 2
    15d0:	69 f3       	breq	.-38     	; 0x15ac <__fpcmp_parts_f+0x2c>
    15d2:	c1 81       	ldd	r28, Z+1	; 0x01
    15d4:	11 96       	adiw	r26, 0x01	; 1
    15d6:	8c 91       	ld	r24, X
    15d8:	11 97       	sbiw	r26, 0x01	; 1
    15da:	c8 13       	cpse	r28, r24
    15dc:	1d c0       	rjmp	.+58     	; 0x1618 <__fpcmp_parts_f+0x98>
    15de:	22 81       	ldd	r18, Z+2	; 0x02
    15e0:	33 81       	ldd	r19, Z+3	; 0x03
    15e2:	12 96       	adiw	r26, 0x02	; 2
    15e4:	8d 91       	ld	r24, X+
    15e6:	9c 91       	ld	r25, X
    15e8:	13 97       	sbiw	r26, 0x03	; 3
    15ea:	82 17       	cp	r24, r18
    15ec:	93 07       	cpc	r25, r19
    15ee:	0c f4       	brge	.+2      	; 0x15f2 <__fpcmp_parts_f+0x72>
    15f0:	13 c0       	rjmp	.+38     	; 0x1618 <__fpcmp_parts_f+0x98>
    15f2:	28 17       	cp	r18, r24
    15f4:	39 07       	cpc	r19, r25
    15f6:	0c f4       	brge	.+2      	; 0x15fa <__fpcmp_parts_f+0x7a>
    15f8:	17 c0       	rjmp	.+46     	; 0x1628 <__fpcmp_parts_f+0xa8>
    15fa:	44 81       	ldd	r20, Z+4	; 0x04
    15fc:	55 81       	ldd	r21, Z+5	; 0x05
    15fe:	66 81       	ldd	r22, Z+6	; 0x06
    1600:	77 81       	ldd	r23, Z+7	; 0x07
    1602:	14 96       	adiw	r26, 0x04	; 4
    1604:	8d 91       	ld	r24, X+
    1606:	9d 91       	ld	r25, X+
    1608:	0d 90       	ld	r0, X+
    160a:	bc 91       	ld	r27, X
    160c:	a0 2d       	mov	r26, r0
    160e:	84 17       	cp	r24, r20
    1610:	95 07       	cpc	r25, r21
    1612:	a6 07       	cpc	r26, r22
    1614:	b7 07       	cpc	r27, r23
    1616:	18 f4       	brcc	.+6      	; 0x161e <__fpcmp_parts_f+0x9e>
    1618:	c1 11       	cpse	r28, r1
    161a:	08 c0       	rjmp	.+16     	; 0x162c <__fpcmp_parts_f+0xac>
    161c:	0a c0       	rjmp	.+20     	; 0x1632 <__fpcmp_parts_f+0xb2>
    161e:	48 17       	cp	r20, r24
    1620:	59 07       	cpc	r21, r25
    1622:	6a 07       	cpc	r22, r26
    1624:	7b 07       	cpc	r23, r27
    1626:	40 f4       	brcc	.+16     	; 0x1638 <__fpcmp_parts_f+0xb8>
    1628:	c1 11       	cpse	r28, r1
    162a:	03 c0       	rjmp	.+6      	; 0x1632 <__fpcmp_parts_f+0xb2>
    162c:	2f ef       	ldi	r18, 0xFF	; 255
    162e:	3f ef       	ldi	r19, 0xFF	; 255
    1630:	05 c0       	rjmp	.+10     	; 0x163c <__fpcmp_parts_f+0xbc>
    1632:	21 e0       	ldi	r18, 0x01	; 1
    1634:	30 e0       	ldi	r19, 0x00	; 0
    1636:	02 c0       	rjmp	.+4      	; 0x163c <__fpcmp_parts_f+0xbc>
    1638:	20 e0       	ldi	r18, 0x00	; 0
    163a:	30 e0       	ldi	r19, 0x00	; 0
    163c:	c9 01       	movw	r24, r18
    163e:	cf 91       	pop	r28
    1640:	08 95       	ret

00001642 <__prologue_saves__>:
    1642:	2f 92       	push	r2
    1644:	3f 92       	push	r3
    1646:	4f 92       	push	r4
    1648:	5f 92       	push	r5
    164a:	6f 92       	push	r6
    164c:	7f 92       	push	r7
    164e:	8f 92       	push	r8
    1650:	9f 92       	push	r9
    1652:	af 92       	push	r10
    1654:	bf 92       	push	r11
    1656:	cf 92       	push	r12
    1658:	df 92       	push	r13
    165a:	ef 92       	push	r14
    165c:	ff 92       	push	r15
    165e:	0f 93       	push	r16
    1660:	1f 93       	push	r17
    1662:	cf 93       	push	r28
    1664:	df 93       	push	r29
    1666:	cd b7       	in	r28, 0x3d	; 61
    1668:	de b7       	in	r29, 0x3e	; 62
    166a:	ca 1b       	sub	r28, r26
    166c:	db 0b       	sbc	r29, r27
    166e:	0f b6       	in	r0, 0x3f	; 63
    1670:	f8 94       	cli
    1672:	de bf       	out	0x3e, r29	; 62
    1674:	0f be       	out	0x3f, r0	; 63
    1676:	cd bf       	out	0x3d, r28	; 61
    1678:	09 94       	ijmp

0000167a <__epilogue_restores__>:
    167a:	2a 88       	ldd	r2, Y+18	; 0x12
    167c:	39 88       	ldd	r3, Y+17	; 0x11
    167e:	48 88       	ldd	r4, Y+16	; 0x10
    1680:	5f 84       	ldd	r5, Y+15	; 0x0f
    1682:	6e 84       	ldd	r6, Y+14	; 0x0e
    1684:	7d 84       	ldd	r7, Y+13	; 0x0d
    1686:	8c 84       	ldd	r8, Y+12	; 0x0c
    1688:	9b 84       	ldd	r9, Y+11	; 0x0b
    168a:	aa 84       	ldd	r10, Y+10	; 0x0a
    168c:	b9 84       	ldd	r11, Y+9	; 0x09
    168e:	c8 84       	ldd	r12, Y+8	; 0x08
    1690:	df 80       	ldd	r13, Y+7	; 0x07
    1692:	ee 80       	ldd	r14, Y+6	; 0x06
    1694:	fd 80       	ldd	r15, Y+5	; 0x05
    1696:	0c 81       	ldd	r16, Y+4	; 0x04
    1698:	1b 81       	ldd	r17, Y+3	; 0x03
    169a:	aa 81       	ldd	r26, Y+2	; 0x02
    169c:	b9 81       	ldd	r27, Y+1	; 0x01
    169e:	ce 0f       	add	r28, r30
    16a0:	d1 1d       	adc	r29, r1
    16a2:	0f b6       	in	r0, 0x3f	; 63
    16a4:	f8 94       	cli
    16a6:	de bf       	out	0x3e, r29	; 62
    16a8:	0f be       	out	0x3f, r0	; 63
    16aa:	cd bf       	out	0x3d, r28	; 61
    16ac:	ed 01       	movw	r28, r26
    16ae:	08 95       	ret

000016b0 <_exit>:
    16b0:	f8 94       	cli

000016b2 <__stop_program>:
    16b2:	ff cf       	rjmp	.-2      	; 0x16b2 <__stop_program>
